/* -------------------------------------------------------------------------- *
 *                           MMB (MacroMoleculeBuilder)                       *
 * -------------------------------------------------------------------------- *
 *                                                                            *
 * Copyright (c) 2011-12 by the Author.                                       *
 * Author: Samuel Flores                                                      *
 *                                                                            *
 * See RNABuilder.cpp for the copyright and usage agreement.                  *
 * -------------------------------------------------------------------------- */
#include "NtCForces.h"  
#include <string.h>
#include <sstream>
#include <Utils.h>
#include "ParameterReader.h"

    NTC_Torque::NTC_Torque (SimbodyMatterSubsystem& matter,ParameterReader& myParameterReader,  NTC_PAR_Class& myNTC_PAR_Class, BiopolymerClassContainer & myBiopolymerClassContainer, std::ostream& outputStream ) : matter(matter),myParameterReader(myParameterReader), myNTC_PAR_Class (myNTC_PAR_Class), myBiopolymerClassContainer(myBiopolymerClassContainer), outputStream(outputStream)
        { 
    };    
    
    void NTC_Torque::calcForce(const State& state, Vector_<SpatialVec>& bodyForces,  
            Vector_<Vec3>& particleForces, Vector& mobilityForces) const 
        {  
        double energy = 0.0;        
        MobilizedBody body1;
        MobilizedBody body2;
        MobilizedBody body3;
        MobilizedBody body4;
        
        MobilizedBody body5;
        
        Transform transform1;
        Transform transform2;
        double forceConstant;
        double torqueConstant;
        double dutyCycle; //must be between 0 and 1.  at 1, force is applied all the time.  at 0, basically never applied.    
        double scrubberPeriod;
        double cutoffRadius;
        double pot_angle;
        double angle;
        double x_d1,x_d2,x_d3,x_d4;
        double y_d1,y_d2,y_d3,y_d4;
        double z_d1,z_d2,z_d3,z_d4;                   
        double d_d1_x,d_d1_y,d_d1_z;
        double d_d2_x,d_d2_y,d_d2_z;
        double d_d3_x,d_d3_y,d_d3_z;
        double cross_1_x,cross_1_y,cross_1_z;
        double cross_2_x,cross_2_y,cross_2_z;
        double d_t,d_t2;
        double cross_3_x,cross_3_y,cross_3_z;
        double direction_x,direction_y,direction_z;
        double rgsq,fg,hg,gaa,gbb,fga,hgb;
        double dfgx,dfgy,dfgz,dthx,dthy,dthz;
        double dtfx,dtfy,dtfz;
        double s_x2,s_y2,s_z2;
        double force_a1_x,force_a1_y,force_a1_z;
        double force_a2_x,force_a2_y,force_a2_z;        
        double force_a3_x,force_a3_y,force_a3_z;
        double force_a4_x,force_a4_y,force_a4_z;
        double PI = 3.14159265359;     
        double dih,bias;
        int    value,i;
        double prob[361];
        double diff_vec12 = 0.0;
        double diff_vec13 = 0.0;
        double diff_vec23 = 0.0;
        double diff_angle_123 = 0.0;       
        
        AtomSpringContainer atomSpringContainer;
        
        for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) 
        { 
          
            String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain;            
            NTC_PAR_BondRow myNTC_PAR_BondRow = myNTC_PAR_Class.myNTC_PAR_BondMatrix.myNTC_PAR_BondRow[(myParameterReader.ntc_class_container.getNTC_Class(r)).NTC_PAR_BondRowIndex];
            String basePairIsTwoTransformForce="ntcstep";
            ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;
            ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).SecondBPResidue;
            ResidueID myResidueNumber,myResidueNumber2;
            Vec3  state_1,state_2,state_3,state_4;

        if((myParameterReader.ntc_class_container.getNTC_Class(r)).threebody == 0 &&
           (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody   == 0) {              
            
	    if ( myNTC_PAR_BondRow.bondLength[0] == 0.0 ) {
//		cout << "torsion " << r << " is real torsion" << endl;
            
         //   myResidueNumber = residueNumber1;            
         //   myResidueNumber.ResidueNumber += stoi(myNTC_PAR_BondRow.atom_shift[0]);             
        
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 1) myResidueNumber = residueNumber2;
            
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 1) myResidueNumber = residueNumber2;
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 1) myResidueNumber = residueNumber2;
            
            body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]); 

            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 1) myResidueNumber = residueNumber2;

            body4 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            Vec3 stationD = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            state_4 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);               
            
            torqueConstant = myNTC_PAR_BondRow.torqueConstant;            
            
            Vec3 d_d1,d_d2,d_d3;
            
            d_d1 = state_2 - state_1;
            d_d2 = state_3 - state_2;
            d_d3 = state_4 - state_3;
            
            Vec3 cross_1, cross_2;
            
            cross_1 = d_d1 % d_d2;
            cross_2 = d_d2 % d_d3;
            
            cross_1 = cross_1 / cross_1.norm();
            cross_2 = cross_2 / cross_2.norm();
        
            Vec3 cross_3;
            
            cross_3 = cross_1 % cross_2;
            
     angle = return_angle(cross_1,cross_2,cross_3,d_d2);
     
     double dist_ang = return_dist_ang(angle,myNTC_PAR_BondRow.rotationAngle);
    
    if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 0) pot_angle = torqueConstant*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight*(-sin((dist_ang + 180.0)/57.295779513))*(360.0/57.295779513 + 1.0)/(1.0 + myNTC_PAR_BondRow.CONFALVALUE)/(360.0/57.295779513)*exp(-(myParameterReader.ntc_class_container.getNTC_Class(r)).weight*(1.0 + sqrt(pow(torqueConstant*(dist_ang+180.0)/(360.0),2)))); 
     
     Vec3 torque;    
     
       if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 0) 
          
       {   
           
         torque = d_d2/d_d2.norm()*pot_angle;
   
         bodyForces[body1.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
         bodyForces[body4.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));
         bodyForces[body2.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
         bodyForces[body3.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));  
       
        };
       
       if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 1) {
           
        dih = 0;
        value = -1;
        bias = 0;
           
        angle *= 57.295779513;
         
      myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]++;        
        
       if(isfinite(angle) == 1) { 
        
        i = (int) round(angle);
        
        double angle_0;
        
       angle_0 = 0.0; 
       
    if(myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) {       
        
      for(i=1;i<=360;i++) {  
    
        myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= (myParameterReader.ntc_class_container.getNTC_Class(r)).weight2*exp(-pow((angle - angle_0)/2.0,2))*exp(-sqrt(pow(myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))/1000.0);
    
        angle_0 += 1.0;
        
      };
    };
        
        value = i;
                  
       
         bias = -(myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value] - myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value-1])/(1.0/360.0);
         
         pot_angle = torqueConstant*(-sin((dist_ang + 180.0)/57.295779513))*(360.0/57.295779513 + 1.0)/(1.0 + myNTC_PAR_BondRow.CONFALVALUE)/(360.0/57.295779513)*exp(-
         (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*(1.0 + sqrt(pow(torqueConstant*(dist_ang+180.0)/(360.0),2))));
       
         torque = d_d2/d_d2.norm()*(pot_angle)/(1.0+(myParameterReader.ntc_class_container.getNTC_Class(r)).weight2)*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
   
         bodyForces[body1.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
         bodyForces[body4.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));
         bodyForces[body2.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
         bodyForces[body3.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));          
         
       if( isfinite(bias) == 1 && sqrt(pow(bias,2)) > 0.0) { 
           
       // torque = -d_d2/d_d2.norm()*(bias)*sqrt(pow(pot_angle,2))/sqrt(pow(bias,2))*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight2*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
           
         torque =  -d_d2/d_d2.norm()*bias; 
           
         bodyForces[body1.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
         bodyForces[body4.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));
         bodyForces[body2.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
         bodyForces[body3.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));  
  
        };
     };
         
   }; 
       
// end real torsions
	}
// bonds
	else {

            Vec3  state_1;
            Vec3  state_2;
        
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            Vec3 ptp = state_2 - state_1;
            double d = ptp.norm(); //sqrt(pow(x_d2-x_d1,2) + pow(y_d2-y_d1,2) + pow(z_d2-z_d1,2));
            double frc;
            Vec3   frcVec;
            
    if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 0) {
        
      frc  = (d*(-exp(-(d-myNTC_PAR_BondRow.bondLength[0]))) - (1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0]))))
                /pow(1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0])),2)*myNTC_PAR_BondRow.springConstant[0]*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;         
        
      frcVec = (frc)*ptp/d;
      
       bodyForces[body1.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));     
	   bodyForces[body2.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1));       
      
    };
  
    
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 1) {  
  
      double prob_d[51];
      
      double dist = 0.0;
      
      bias = 0.0;
      
      double d_0; 
      
      double average_d;
      
      myBiopolymerClassContainer.av_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d;
      
      average_d = 2.0*(myBiopolymerClassContainer.av_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/
      myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/200.0;
      
    if(myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) {       
       
      d_0 = 0.0;
      
      for(i=1;i<=200;i++) { 
       
       myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= (myParameterReader.ntc_class_container.getNTC_Class(r)).weight2*exp(-pow((d - d_0)/average_d,2))*exp(-sqrt(pow(myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))/1000.0);
       
       d_0 += average_d;
       
      };
    };

       d_0 = 0.0;
        
      for(i=1;i<=200;i++) { 
       
          if((d - d_0) < 0.5*average_d) value = i; 
          
          d_0 += average_d;
          
       };
       
       if(value > 1 && value <= 200) bias = -(myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value] - myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value-1])/(0.02*average_d);
              
       frc  = (d*(-exp(-(d-myNTC_PAR_BondRow.bondLength[0]))) - (1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0]))))
                /pow(1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0])),2);        
       
       frc =  frc/(1.0 + (myParameterReader.ntc_class_container.getNTC_Class(r)).weight2);
        
       frcVec = (frc)*ptp/d*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
        
	   bodyForces[body1.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));     
	   bodyForces[body2.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1));        
       
     if( isfinite(bias) == 1 && sqrt(pow(bias,2)) > 0.0) {   
         
        frcVec = (bias)*ptp/d;
        
	    bodyForces[body1.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1));     
	    bodyForces[body2.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));          
        
      };
    }; 
   };
 };
};

double prefactor_12=-1.0,prefactor_13=-1.0,prefactor_23=-1.0;
      
Vec3 d12;
Vec3 d13;
Vec3 d23;
double d_t_12;
double d_t_13;
double d_t_23;
int    pos_12_x, pos_12_y, pos_12_z;
int    pos_12b_x, pos_12b_y, pos_12b_z;
int    pos_13_x, pos_13_y, pos_13_z;
int    pos_23_x, pos_23_y, pos_23_z;
int    pos_angle;
Vec3 d21;
Vec3 frcVec;
double d_0;
double d_0_x,d_0_y,d_0_z;
double r_1;
double r_2;
double d_3;
int    k;

double dL_norm_2;

double delta;
      
double hist_d_max;

double Z_threebody_angle;
double Z_threebody_X,Z_threebody_Y,Z_threebody_Z;

Z_threebody_angle = 0.0;

Z_threebody_X     = 0.0;
Z_threebody_Y     = 0.0;
Z_threebody_Z     = 0.0;

Vec3 state_1,state_2;

for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 

  if((myParameterReader.ntc_class_container.getNTC_Class(r)).threebody == 1) {  
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_threebody;
      
      ResidueID residueNumber3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_threebody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"O4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"O4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"O4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_threebody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"O4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"O4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"O4*");

      String chainId3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_chain_threebody;
      
      MobilizedBody body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId3,residueNumber3,"O4*");
      Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId3,residueNumber3,"O4*");
      Vec3 state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId3,residueNumber3,"O4*");
      
      Vec3 d12 = state_2 - state_1;
      Vec3 d13 = state_3 - state_1;
      Vec3 d23 = state_3 - state_2;
      
      d_t_12 = d12.norm();
      d_t_13 = d13.norm();
      d_t_23 = d23.norm();
      
      d21 = state_1 - state_2;
 
      myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
      
      r_1 = dot(d12,d12);
      r_2 = dot(d23,d23);
      
      r_1 = sqrt(r_1);
      r_2 = sqrt(r_2);
      
      d_3 = dot(d12,d23);
      
      d_3 /= (r_1*r_2);
      
      angle = acos(d_3);

    //  angle *= 180.0/PI;
      
      myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += angle;
      
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
      (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) { 
     
       myBiopolymerClassContainer.stamp_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = angle; 
       
    } 
      
  double q_0;
  
  if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
  (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {  
  
  q_0 = -1.0;
      
  for(i=1;i<=100;i++) {    
      
    if(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-(pow(((angle - myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])
     /pow(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
     - q_0)/1.0,2))); 
      
    if(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-(pow(((angle - myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])
     /pow(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
     - q_0)/1.0,2))); 

   //  std::cout << myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " " << myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << "  DELTA_L_ANGLE \n";      
      
    if(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
       Z_threebody_angle += myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      
      q_0 += 0.02;
      
    };
  };
  
   if(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)   
     myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
    )*(angle - myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])
     /pow(myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
     
     myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
                                                                                                              myBiopolymerClassContainer.dL_angle2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
                                                                                                              myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
                                                                                    
     myBiopolymerClassContainer.dL_angle2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];                                                                                                        
     
     myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
                                                                                                                   myBiopolymerClassContainer.dL_angle2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
     
     myBiopolymerClassContainer.diff_L_angle_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] 
     - myBiopolymerClassContainer.diff_L_angle_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
                                                                                                                   
     myBiopolymerClassContainer.diff_L_angle_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];                                                                                                                   
                                                                                                                   
      // FINISH ANGLES
      
      // BEGIN D_12
      
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[0];
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[1];
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[2];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
    (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) { 
     
      myBiopolymerClassContainer.stamp_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[0];
      myBiopolymerClassContainer.stamp_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[1];
      myBiopolymerClassContainer.stamp_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[2];        
        
    }
    
  if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
  (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {  
  
  q_0 = -1.0;
      
  for(i=1;i<=100;i++) {         
      
    if(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((d12[0] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
              -q_0,2));

    if(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((d12[1] - myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
              -q_0,2));
      
      
    if(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((d12[2] - myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
              -q_0,2));
      
    if(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((d12[0] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
              -q_0,2));

    if(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((d12[1] - myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
              -q_0,2));
      
      
    if(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((d12[2] - myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
              -q_0,2));  
      
     if(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_X += myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
     
     if(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Y += myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];     
         
     if(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Z += myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];      
     
      q_0 += 0.02;
      
   };
  };
 
    if(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)  
      myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d12[0] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
      myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[0] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      - myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
      myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[0] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L12_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    if(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d12[1] - myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[1] - myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L12_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
       
    if(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d12[2] - myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[2] - myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L12_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];     
      
      hist_d_max = 0.0;
      
      for(i=1;i<=100;i++) {
        
          if(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] > hist_d_max) 
             hist_d_max = myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]; 
          if(myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          if(myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]  > hist_d_max)
             hist_d_max = myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];          
      };
      
      if(hist_d_max == 0.0) hist_d_max = 1.0;
      
      // END 12
   
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d13[0];
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d13[1];
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d13[2];
      
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
    (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) { 
     
      myBiopolymerClassContainer.stamp_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d13[0];
      myBiopolymerClassContainer.stamp_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d13[1];
      myBiopolymerClassContainer.stamp_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d13[2];        
        
    }
    
  if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
  (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {  
  
  q_0 = -1.0;
      
  for(i=1;i<=100;i++) {      
      
    if(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d13[0] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
      
    if(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d13[1] - myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d13[2] - myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));  
      
    if(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d13[0] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
      
    if(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d13[1] - myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d13[2] - myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));       

     if(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_X += myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
     
     if(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Y += myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];     
         
     if(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Z += myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];       
      
      q_0 += 0.02;
      
   };
  };
 
    if(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)  
      myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d13[0] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
      myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d13[0] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      - myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
      myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d13[0] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L13_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L13_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL13_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    if(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d13[1] - myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d13[1] - myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L13_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L13_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL13_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
       
    if(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d13[2] - myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d13[2] - myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L13_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L13_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL13_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];  
      
   
      // END 13
      
      // BEGIN 23
      
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d23[0];
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d23[1];
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d23[2];
      
     if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
     (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) { 
     
      myBiopolymerClassContainer.stamp_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d23[0];
      myBiopolymerClassContainer.stamp_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d23[1];
      myBiopolymerClassContainer.stamp_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d23[2];        
        
    }
    
  if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
  (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {  
  
  q_0 = -1.0;
      
  for(i=1;i<=100;i++) {     
      
     if(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d23[0] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d23[1] - myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d23[2] - myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));  
      
     if(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d23[0] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d23[1] - myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d23[2] - myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));       
      
     if(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_X += myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
     
     if(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Y += myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];     
         
     if(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Z += myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];       
      
      q_0 += 0.02;
      
   };
  };
  
  
    if(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)  
      myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d23[0] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
      myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d23[0] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      - myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
      myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d23[0] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L23_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L23_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL23_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    if(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d23[1] - myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d23[1] - myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L23_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L23_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL23_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
       
    if(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d23[2] - myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d23[2] - myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L23_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L23_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL23_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];    
    
      
 // END 23      
  };     
};

for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 
   
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).twobody == 1) {
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_twobody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"O4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"O4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"O4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_twobody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"O4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"O4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"O4*");
      
      Vec3 d12 = state_2 - state_1;
      
      d_t_12 = dot(d12,d12);
      
      myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
      
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[0];
      myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[1];
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[2];
      
    if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
    (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) { 
     
      myBiopolymerClassContainer.stamp_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[0];
      myBiopolymerClassContainer.stamp_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[1];
      myBiopolymerClassContainer.stamp_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[2];        
        
    }

  double q_0;
    
  if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
  (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {  
  
  q_0 = -1.0;
      
  for(i=1;i<=100;i++) {    
    
    if(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d12[0] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d12[1] - myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((d12[2] - myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2)); 
      
    if(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d12[0] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d12[1] - myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));
      
    if(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow((d12[2] - myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
      - q_0,2));       
      
     if(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_X += myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
     
     if(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Y += myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];     
         
     if(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Z_threebody_Z += myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];       
    
      q_0 += 0.02;
      
   };
  };
 
    if(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)  
      myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d12[0] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
      myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[0] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      - myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
      myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[0] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L12b_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12b_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12b_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    if(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d12[1] - myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[1] - myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L12b_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12b_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12b_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
       
    if(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)      
      myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((d12[2] - myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/
      pow(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));      
      
      myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = d12[2] - myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];       
      
      myBiopolymerClassContainer.diff_L12b_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12b_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12b_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];    
      
    }; 
  };
      
for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 
 
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).threebody == 1) {  
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_threebody;
      
      ResidueID residueNumber3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_threebody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"O4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"O4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"O4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_threebody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"O4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"O4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"O4*");

      String chainId3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_chain_threebody;
      
      MobilizedBody body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId3,residueNumber3,"O4*");
      Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId3,residueNumber3,"O4*");
      Vec3 state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId3,residueNumber3,"O4*");
      
      Vec3 d12 = state_2 - state_1;
      Vec3 d13 = state_3 - state_1;
      Vec3 d23 = state_3 - state_2;    
    
    // ANGLES 
    
      d_0 = -1.0 - 1.0/100.0;
    
      pos_angle = 0;
      
      for(i=1;i<=102;i++) { 
          
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {      
       
     if(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {   
        
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_angle_k*(2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_angle + 
       myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_angle);
    
       myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max);
       
     } else {
       
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_angle_k*myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_angle;
       myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta; 
       
     };
     
    // std::cout << myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " HIST ANGLE THREEBODY \n";
       
    };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0,2)) <= (1.0)/100.0 ) {
               
            pos_angle = i;
    
      //     std::cout << pos_angle << " " << myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] << " " << std::endl;
           
          }; 
       
       d_0 += (2.0)/100.0;
       
      };
      
      double frc;
      
      if(pos_angle < 96 && pos_angle > 4 && myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
      && myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
      myBiopolymerClassContainer.diff_L_angle_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   != 0.0) {
          
          frc = -myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/
          sqrt(pow(myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],
          2))*(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle+2] -
               myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle])/(2.0) -
               0.5*myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/
          sqrt(pow(myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],
          2))*(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle+2] -
               2.0*myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle]
               - myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle-2])/(pow(4.0,2));
               -0.33*myBiopolymerClassContainer.diff_L_angle_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/
          sqrt(pow(myBiopolymerClassContainer.diff_L_angle_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],
          2))*(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle-4] +
               2.0*myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle-2]
             + 2.0*myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle+2]
               - myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle+4])/(pow(8.0,3)); 
          
       } else {
        
           frc = 0.0;
           
       };
       
      frc *= 100.0; 
      
      Vec3 d_ab,d_ab2;
      
      double dL_norm;
     
       d_ab  = state_1 + 0.5*d12;
       d_ab2 = state_2 + 0.5*d23; 
     
       d_ab  /= d_ab.norm();
       d_ab2 /= d_ab2.norm();
       
       frcVec = frc*d_ab;      
      
       bodyForces[body1.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(0));  
       bodyForces[body2.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(0));
       
       frcVec = frc*d_ab2;       
       
       bodyForces[body2.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(0));       
       bodyForces[body3.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(0)); 
       
   //    };
       
  //    std::cout << " angle "<< pos_angle << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";       
       
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[0];
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[1];
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d12[2];
      
      // END ANGLES

      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;      
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_12_x = 0;
      pos_12_y = 0;
      pos_12_z = 0;
      
      for(i=1;i<=102;i++) { 
          
      if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {           
           
      if(myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {   
          
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_12_x
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X + 
       myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X);
       
       myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
      
      } else {
        
        delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_X*myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
        
        myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta; 
          
      };
      
     // std::cout << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " HIST_D_12 " << i << "\n";
        
      };
      
       if( sqrt(pow(myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= (1.0)/100.0 ) {
               
            pos_12_x = i;
            
          };  
       
    //   std::cout << pos_12_x << " " << myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] << " "<< myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {    
       
      if(myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {             
            
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_12_y
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y +
       myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y);
       
       myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
       
      } else {
         
        delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_Y*myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
        
        myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;           
          
       };
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= (1.0)/100.0 ) {
               
            pos_12_y = i;
           
          };  
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {      

      if(myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {            
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(((2.0*0.001*(-log(sqrt(pow(myBiopolymerClassContainer.hist_d_12_z
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)))))*(
       myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z +
       myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z);
       
       myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
       
      } else {
         
        delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_Z*myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
        
        myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;           
          
       };
       
       // std::cout << myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " HIST_D_12 " << i << "\n";       
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= (1.0)/100.0 ) {
               
            pos_12_z = i;
           
          };         
       
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;
        d_0_z += (2.0)/100.0;
       
   //   std::cout << pos_12_z << " " << myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] << " " <<  myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << "\n";
    
   //    std::cout << myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x << " " << myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y
   //    << " " << myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z << std::endl;
       
      };
      
    double dL_norm2 = sqrt(pow(myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));     
    
    double dL_norm3 = sqrt(pow(myBiopolymerClassContainer.diff_L12_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));        
      
    dL_norm = sqrt(pow(myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
     double d_x,d_y,d_z,d_x2,d_y2,d_z2,d_x3,d_y3,d_z3;
    
  if(dL_norm > 0.0 && dL_norm2 > 0.0 && dL_norm3 > 0.0) {  
    
    if(pos_12_x > 4 && pos_12_x < 96)  {  
      
      d_x = myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+2] -
      myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x])/(2.0);        
        
      d_x2 = myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+2] -
      2.0*myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x] +
      myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x-2])/pow(4.0,2);
      
      d_x3 = myBiopolymerClassContainer.diff_L12_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x-4] +
      2.0*myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x-2] +
      2.0*myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+2] -
      myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+4])/pow(8.0,3);      
      
    }
    if(pos_12_y > 4 && pos_12_y < 96) {

      d_y = myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y+2] -
      myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y])/(2.0);        
        
      d_y2 = myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y+2] -
      2.0*myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y] +
      myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y-2])/pow(4.0,2);
      
      d_y3 = myBiopolymerClassContainer.diff_L12_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y-4] +
      2.0*myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y-2] +
      2.0*myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y+2] -
      myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y+4])/pow(8.0,3); 
      
    }      
    if(pos_12_z > 4 && pos_12_z < 96) { 

      d_z = myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z+2] -
      myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z])/(2.0);        
        
      d_z2 = myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z+2] -
      2.0*myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z] +
      myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z-2])/pow(4.0,2);
      
      d_z3 = myBiopolymerClassContainer.diff_L12_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z-4] +
      2.0*myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z-2] +
      2.0*myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z+2] -
      myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z+4])/pow(8.0,3); 
      
    }
    
      frcVec[0] = (- d_x - 0.5 * d_x2 - 0.33 * d_x3);
      frcVec[1] = (- d_y - 0.5 * d_y2 - 0.33 * d_y3);
      frcVec[2] = (- d_z - 0.5 * d_z2 - 0.33 * d_z3);      
    
   //   std::cout << frcVec[0] << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+1] << " " <<
   //   pos_12_x << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x] << " " << frcVec[1] << " " << frcVec[2] << " \n";
    
       bodyForces[body1.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));  
       bodyForces[body2.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1)); 
       
  };
       
   std::cout << " 12 f1,f2,f3 "<< pos_12_x << " " << pos_12_y << " " << pos_12_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";       
   std::cout << " 12 d_xyz "<< pos_12_x << " " << pos_12_y << " " << pos_12_z << " "<< d_x << " " << d_x2 << " " << d_x3 << "\n";

  
     // END D_12
       
     // BEGIN D_13
      
      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_13_x = 0;
      pos_13_y = 0;
      pos_13_z = 0;
      
    for(i=1;i<=102;i++) { 
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {        
       
       if(myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {        
            
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_13_x
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X +
       myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X);
       
       myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max);        
       
       } else {
         
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_X*myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta; 
           
       };
       
      // std::cout << myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= (1.0)/100.0 ) {
               
            pos_13_x = i;
           
          };  
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {     
       
       if(myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {           
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*((-sqrt(pow(log(sqrt(pow(myBiopolymerClassContainer.hist_d_13_y
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))),2)))*(
       myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y +
       myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y);
       
       myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max);   
       
       } else {
         
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_Y*myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;           
           
       };
       
     //  std::cout << myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= (1.0)/100.0 ) {
               
            pos_13_y = i;
           
          }; 
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {     

       if(myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {           
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*(-log(sqrt(pow(myBiopolymerClassContainer.hist_d_13_z
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)))*(
       myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z +
       myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z);
       
       myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max);  
       
       } else {
         
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_Z*myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;            
           
       };
       
      // std::cout << myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= (1.0)/100.0 ) {
               
            pos_13_z = i;
           
          };         
           
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;            
        d_0_z += (2.0)/100.0; 
       
      };
   
    dL_norm2 = sqrt(pow(myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));     
    
    dL_norm3 = sqrt(pow(myBiopolymerClassContainer.diff_L13_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L13_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L13_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));        
      
    dL_norm = sqrt(pow(myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
    
  if(dL_norm > 0.0 && dL_norm2 > 0.0 && dL_norm3 > 0.0) {  
    
    if(pos_13_x > 4 && pos_13_x < 96)  {  
      
      d_x = myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x+2] -
      myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x])/(2.0);        
        
      d_x2 = myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x+2] -
      2.0*myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x] +
      myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x-2])/pow(4.0,2);
      
      d_x3 = myBiopolymerClassContainer.diff_L13_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x-4] +
      2.0*myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x-2] +
      2.0*myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x+2] -
      myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x+4])/pow(8.0,3);      
      
    }
    if(pos_13_y > 4 && pos_13_y < 96) {

      d_y = myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y+2] -
      myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y])/(2.0);        
        
      d_y2 = myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y+2] -
      2.0*myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y] +
      myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y-2])/pow(4.0,2);
      
      d_y3 = myBiopolymerClassContainer.diff_L13_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y-4] +
      2.0*myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y-2] +
      2.0*myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y+2] -
      myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y+4])/pow(8.0,3); 
      
    }      
    if(pos_13_z > 4 && pos_13_z < 96) { 

      d_z = myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z+2] -
      myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z])/(2.0);        
        
      d_z2 = myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z+2] -
      2.0*myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z] +
      myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z-2])/pow(4.0,2);
      
      d_z3 = myBiopolymerClassContainer.diff_L13_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z-4] +
      2.0*myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z-2] +
      2.0*myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z+2] -
      myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z+4])/pow(8.0,3); 
      
    }
    
      frcVec[0] = (- d_x - 0.5 * d_x2 - 0.33 * d_x3);
      frcVec[1] = (- d_y - 0.5 * d_y2 - 0.33 * d_y3);
      frcVec[2] = (- d_z - 0.5 * d_z2 - 0.33 * d_z3);      
      
   //   std::cout << frcVec[0] << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+1] << " " <<
   //   pos_12_x << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x] << " " << frcVec[1] << " " << frcVec[2] << " \n";
    
       bodyForces[body1.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));  
       bodyForces[body3.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1)); 
       
  };   
       
   //  std::cout << " 13 "<< pos_13_x << " " << pos_13_y << " " << pos_13_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";        
       
       // END 13
       
       // BEGIN 23 
      
      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_23_x = 0;
      pos_23_y = 0;
      pos_23_z = 0;
     
      for(i=1;i<=102;i++) {
          
      if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {         
       
       if(myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {            
          
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*((-(log(sqrt(pow(myBiopolymerClassContainer.hist_d_23_x
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)))))*(
       myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X +
       myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X);
       
       myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max);  
       
       } else {
       
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_X*myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;        
       
      };
      
      //std::cout << myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
      
      };
      
       if( sqrt(pow(myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= (1.0)/100.0 ) {
               
            pos_23_x = i;
           
          };  
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {     
       
       if(myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {    
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*((2.0*0.001*(-log(sqrt(pow(myBiopolymerClassContainer.hist_d_23_y
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y +
       myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y);
       
       myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
       
       } else {
       
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_Y*myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;        
       
       };
       
      // std::cout << myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;       
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= (1.0)/100.0 ) {
               
            pos_23_y = i;
           
          }; 
       
       if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {     

       if(myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {           
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k*(2.0*0.001*((-(log(sqrt(pow(myBiopolymerClassContainer.hist_d_23_z
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)))))*(
       myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z +
       myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z);
       
       myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
       
       } else {
         
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).threebody_bond_k/Z_threebody_Z*myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;            
           
       };
       
    //   std::cout << myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl; 
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= (1.0)/100.0 ) {
               
            pos_23_z = i;
           
          };         
           
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;            
        d_0_z += (2.0)/100.0;
        
      };
      

    dL_norm2 = sqrt(pow(myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));     
    
    dL_norm3 = sqrt(pow(myBiopolymerClassContainer.diff_L23_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L23_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L23_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));        
      
    dL_norm = sqrt(pow(myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
    
  if(dL_norm > 0.0 && dL_norm2 > 0.0 && dL_norm3 > 0.0) {  
    
    if(pos_23_x > 4 && pos_23_x < 96)  {  
      
      d_x = myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x+2] -
      myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x])/(2.0);        
        
      d_x2 = myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x+2] -
      2.0*myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x] +
      myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x-2])/pow(4.0,2);
      
      d_x3 = myBiopolymerClassContainer.diff_L23_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x-4] +
      2.0*myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x-2] +
      2.0*myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x+2] -
      myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x+4])/pow(8.0,3);      
      
    }
    if(pos_23_y > 4 && pos_23_y < 96) {

      d_y = myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y+2] -
      myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y])/(2.0);        
        
      d_y2 = myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y+2] -
      2.0*myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y] +
      myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y-2])/pow(4.0,2);
      
      d_y3 = myBiopolymerClassContainer.diff_L23_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y-4] +
      2.0*myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y-2] +
      2.0*myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y+2] -
      myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y+4])/pow(8.0,3); 
      
    }      
    if(pos_23_z > 4 && pos_23_z < 96) { 

      d_z = myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z+2] -
      myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z])/(2.0);        
        
      d_z2 = myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z+2] -
      2.0*myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z] +
      myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z-2])/pow(4.0,2);
      
      d_z3 = myBiopolymerClassContainer.diff_L23_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z-4] +
      2.0*myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z-2] +
      2.0*myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z+2] -
      myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z+4])/pow(8.0,3); 
      
    }
    
      frcVec[0] = (- d_x - 0.5 * d_x2 - 0.33 * d_x3);
      frcVec[1] = (- d_y - 0.5 * d_y2 - 0.33 * d_y3);
      frcVec[2] = (- d_z - 0.5 * d_z2 - 0.33 * d_z3);      
      
   //   std::cout << frcVec[0] << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+1] << " " <<
   //   pos_12_x << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x] << " " << frcVec[1] << " " << frcVec[2] << " \n";
    
       bodyForces[body2.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));  
       bodyForces[body3.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1)); 
       
  };       
    //   std::cout << " 23 "<< myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] << " " << pos_23_x << " " << pos_23_y << " " << pos_23_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";        
       
       diff_vec13 += d_t_13;
       diff_vec12 += d_t_12;
       diff_vec23 += d_t_23;
       diff_angle_123 += angle;
       
      std::cout << " D_T_12 : " << diff_vec12 << " D_T_23 : " << diff_vec23 << " D_T_13 : " << diff_vec13 << " DIFF_ANGLE : " << diff_angle_123 << "\n"; 
       
   };   
};
 
for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 
   
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).twobody == 1) {
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_twobody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"O4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"O4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"O4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_twobody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"O4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"O4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"O4*");
      
      Vec3 d12 = state_2 - state_1;      
  
      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_12b_x = 0;
      pos_12b_y = 0;
      pos_12b_z = 0;
      
      for(i=1;i<=102;i++) { 
          
       if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {
           
       if(myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {
     
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k*((2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_12b_x
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)))))*(
       myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X +
       myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_X);
       
       myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max);           
      
       } else {
       
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k/Z_threebody_X*myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;        
       
       };
       
      // std::cout << myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
       
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= (1.0)/100.0 ) {
               
            pos_12b_x = i;
           
          };  
       
       if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {      
       
       if(myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {           
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k*(2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_12b_y
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y +
       myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Y);
       
       myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
       
       } else {
       
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k/Z_threebody_Y*myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;        
       
       };       
       }
       
       if( sqrt(pow(myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= (1.0)/100.0 ) {
               
            pos_12b_y = i;
           
          };  
       
       if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%100 == 0) {       

       if(myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] != 0.0) {             
           
       delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k*(2.0*0.001*((-log(sqrt(pow(myBiopolymerClassContainer.hist_d_12b_z
       [(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))))*(
       myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z +
       myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_threebody_Z);
       
       myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta*
       exp(-pow(myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/hist_d_max); 
       
       } else {
         
          delta = (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k/Z_threebody_Z*myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
          
          myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] += delta;            
           
       };
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= (1.0)/100.0 ) {
               
            pos_12b_z = i;
           
          };         
           
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;           
        d_0_z += (2.0)/100.0;
       
      };
      
   double dL_norm2 = sqrt(pow(myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));     
    
   double dL_norm3 = sqrt(pow(myBiopolymerClassContainer.diff_L12b_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12b_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12b_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));        
      
   double dL_norm = sqrt(pow(myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2) +
                   pow(myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
   double d_x,d_x2,d_x3,d_y,d_y2,d_y3,d_z,d_z2,d_z3; 
    
  if(dL_norm > 0.0 && dL_norm2 > 0.0 && dL_norm3 > 0.0) {  
    
    if(pos_12b_x > 4 && pos_12b_x < 96)  {  
      
      d_x = myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x+2] -
      myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x])/(2.0);        
        
      d_x2 = myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x+2] -
      2.0*myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x] +
      myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x-2])/pow(4.0,2);
      
      d_x3 = myBiopolymerClassContainer.diff_L12b_x_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x-4] +
      2.0*myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x-2] +
      2.0*myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x+2] -
      myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x+4])/pow(8.0,3);      
      
    }
    if(pos_12b_y > 4 && pos_12b_y < 96) {

      d_y = myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y+2] -
      myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y])/(2.0);        
        
      d_y2 = myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y+2] -
      2.0*myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y] +
      myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y-2])/pow(4.0,2);
      
      d_y3 = myBiopolymerClassContainer.diff_L12b_y_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y-4] +
      2.0*myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y-2] +
      2.0*myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y+2] -
      myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y+4])/pow(8.0,3); 
      
    }      
    if(pos_12b_z > 4 && pos_12b_z < 96) { 

      d_z = myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm*(myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z+2] -
      myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z])/(2.0);        
        
      d_z2 = myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm2*(myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z+2] -
      2.0*myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z] +
      myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z-2])/pow(4.0,2);
      
      d_z3 = myBiopolymerClassContainer.diff_L12b_z_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/dL_norm3*(-myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z-4] +
      2.0*myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z-2] +
      2.0*myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z+2] -
      myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z+4])/pow(8.0,3); 
      
    }
    
      frcVec[0] = (- d_x - 0.5 * d_x2 - 0.33 * d_x3);
      frcVec[1] = (- d_y - 0.5 * d_y2 - 0.33 * d_y3);
      frcVec[2] = (- d_z - 0.5 * d_z2 - 0.33 * d_z3);      

      
   //   std::cout << frcVec[0] << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x+1] << " " <<
   //   pos_12_x << " " << myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x] << " " << frcVec[1] << " " << frcVec[2] << " \n";
    
       bodyForces[body1.getMobilizedBodyIndex()] -=  SpatialVec(frcVec,Vec3(1));  
       bodyForces[body2.getMobilizedBodyIndex()] +=  SpatialVec(frcVec,Vec3(1)); 
       
  };     
      
       
      diff_vec12 += d_t_12;   
       
  //   std::cout << "12b" << pos_12b_x << " " << pos_12b_y << " "<< pos_12b_z << " "  << frcVec[0]  << " " << frcVec[1] << " " << frcVec[2] << "\n";
     
  };
  
  };
};      
        
    Real NTC_Torque::calcPotentialEnergy(const State& state) const { 

        double energy = 0.0;  
        double rms    = 0.0;
        MobilizedBody body1;
        MobilizedBody body2;
        MobilizedBody body3;
        MobilizedBody body4;
        Transform transform1;
        Transform transform2;
        double forceConstant;
        double torqueConstant;
        double dutyCycle; //must be between 0 and 1.  at 1, force is applied all the time.  at 0, basically never applied.    
        double scrubberPeriod;
        double cutoffRadius;
        double PI = 5.14159265359;
        double pot_angle;
        double angle;
        double x_d1,x_d2,x_d3,x_d4;
        double y_d1,y_d2,y_d3,y_d4;
        double z_d1,z_d2,z_d3,z_d4;                   
        double d_d1_x,d_d1_y,d_d1_z;
        double d_d2_x,d_d2_y,d_d2_z;
        double d_d3_x,d_d3_y,d_d3_z;
        double cross_1_x,cross_1_y,cross_1_z;
        double cross_2_x,cross_2_y,cross_2_z;
        double d_t,d_t2;
        double cross_3_x,cross_3_y,cross_3_z;
        double direction_x,direction_y,direction_z;
        double rgsq,fg,hg,gaa,gbb,fga,hgb;
        double dfgx,dfgy,dfgz,dthx,dthy,dthz;
        double dtfx,dtfy,dtfz;
        double s_x2,s_y2,s_z2;
        double force_a1_x,force_a1_y,force_a1_z;
        double force_a2_x,force_a2_y,force_a2_z;        
        double force_a3_x,force_a3_y,force_a3_z;
        double force_a4_x,force_a4_y,force_a4_z;
        
        for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) 
        { 
	    if (myParameterReader.verbose) cout<<__FILE__<<":"<<__LINE__<<"  doing base pair #"<<r<<endl;	
        
            String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain;            
            NTC_PAR_BondRow myNTC_PAR_BondRow = myNTC_PAR_Class.myNTC_PAR_BondMatrix.myNTC_PAR_BondRow[(myParameterReader.ntc_class_container.getNTC_Class(r)).NTC_PAR_BondRowIndex];
            String basePairIsTwoTransformForce="ntcstep";
            ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;
            ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).SecondBPResidue;
            ResidueID myResidueNumber,myResidueNumber2;

	    if ( myNTC_PAR_BondRow.bondLength[0] == 0.0 ) {
//		cout << "torsion " << r << " is real torsion" << endl;
            
             Vec3  state_1,state_2,state_3,state_4;
        
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 1) myResidueNumber = residueNumber2;
            
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 1) myResidueNumber = residueNumber2;
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 1) myResidueNumber = residueNumber2;
            
            body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]); 

            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 1) myResidueNumber = residueNumber2;

            body4 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            Vec3 stationD = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            state_4 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);               
            
            torqueConstant = myNTC_PAR_BondRow.torqueConstant;            

            Vec3 d_d1,d_d2,d_d3;
            
            d_d1 = state_2 - state_1;
            d_d2 = state_3 - state_2;
            d_d3 = state_4 - state_3;
            
            Vec3 cross_1, cross_2;
            
            cross_1 = d_d1 % d_d2;
            cross_2 = d_d2 % d_d3;
            
            cross_1 = cross_1 / cross_1.norm();
            cross_2 = cross_2 / cross_2.norm();
        
            Vec3 cross_3;
            
            cross_3 = cross_1 % cross_2;
        
     angle = return_angle(cross_1,cross_2,cross_3,d_d2);
     
     double dist_ang = return_dist_ang(angle,myNTC_PAR_BondRow.rotationAngle);  

    energy += torqueConstant*cos((dist_ang + 180.0)/57.295779513)*(360.0/57.295779513+1.0)/(1.0+myNTC_PAR_BondRow.CONFALVALUE)/(360.0/57.295779513);//torqueConstant*pow(dist_ang/57.295779513,2);//-torqueConstant*(-cos(dist_ang/57.295779513)+(exp(-(pow(dist_ang,2)/(2.0*pow(l_param,2))))));
        
    cout << " NTC sampling - CHAIN ID = " << chainId1 << ", residuenumber " << myResidueNumber.ResidueNumber  << " difference-angle = "<< dist_ang << " , CONFALVALUE = " << myNTC_PAR_BondRow.CONFALVALUE << " , " << angle*57.295779513 << " = angle at time t for atoms  = " << myNTC_PAR_BondRow.residue1Atom[0] << " , " << myNTC_PAR_BondRow.residue1Atom[1] << " , " << myNTC_PAR_BondRow.residue1Atom[2] << " , " << myNTC_PAR_BondRow.residue1Atom[3] << " , "<< myNTC_PAR_BondRow.rotationAngle*57.295779513 << " = angle_0 from  input , " << "energy = " << energy << endl;
        
    rms   += sqrt(pow(dist_ang,2));    
            
// end real torsions
	}
// bonds
	else {
	
	    Vec3  state_1;
	    Vec3  state_2;
                    
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            Vec3 diff = state_2 - state_1;
            
            double d = diff.norm();

	      cout << "NN|CC difference: " << (d - myNTC_PAR_BondRow.bondLength[0]) << ", current value: " << d << ", equilibrium value: " << myNTC_PAR_BondRow.bondLength[0] << endl;

          energy += myNTC_PAR_BondRow.springConstant[0]*pow(1.0-exp(-(2.0*myNTC_PAR_BondRow.CONFALVALUE)*(d - myNTC_PAR_BondRow.bondLength[0])),2);
          
	     };
       };
       
       cout << rms << " = RMSD Angle sum " << endl;
       
       return energy;   
          

         
    };
    bool NTC_Torque::dependsOnlyOnPositions() const  { 
        return true; 
    };  
    
    
Real NTC_Torque::return_dist_ang(double angle,double rotationAngle) const
{
       
     double ang_diff = (angle - rotationAngle)*57.295779513; // Deg
     double dist_ang = 180.0 - abs(180.0 - abs(ang_diff));
     int angle_1 = int(round(angle*57.295779513));
     int angle_2 = int(round(rotationAngle*57.295779513));

     int interval_begin = angle_2;
     int interval_end   = (interval_begin + 180) % 360;

     if (interval_end > interval_begin) {
         if (angle_1 < interval_begin || angle_1 > interval_end ) {
             dist_ang = -dist_ang;
        }
     } else {
         if (angle_1 < interval_begin && angle_1 > interval_end ) {
             dist_ang = -dist_ang;
        };
    };    
    
  return dist_ang;  
} 

Real NTC_Torque::return_angle(Vec3 cross_1,Vec3 cross_2,Vec3 cross_3,Vec3 d_d2) const 
{
   
   double angle; 
   double PI = 5.14159265359;
           
   Vec3 direction;
            
   direction[0] = cross_3[0]*d_d2[0];
   direction[1] = cross_3[1]*d_d2[1];  
   direction[2] = cross_3[2]*d_d2[2];
            
   double scalar_product = dot(cross_1,cross_2);
        
   if(scalar_product >= 1.0) scalar_product = 1.0;
   if(scalar_product < -1.0) scalar_product = -1.0;       
      
   angle = acos(scalar_product)*180.0/PI;
        
   if(direction[0] < 0.0 && direction[1] < 0.0 && direction[2] < 0.0) {
            
      angle = -angle;
            
   };          
            
   if(angle < 0.0) angle = angle + 360.0;
        
   angle /= 57.295779513;    
    
  return angle;  
}
