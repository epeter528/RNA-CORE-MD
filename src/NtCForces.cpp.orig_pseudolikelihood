/* -------------------------------------------------------------------------- *
 *                           MMB (MacroMoleculeBuilder)                       *
 * -------------------------------------------------------------------------- *
 *                                                                            *
 * Copyright (c) 2011-12 by the Author.                                       *
 * Author: Samuel Flores                                                      *
 *                                                                            *
 * See RNABuilder.cpp for the copyright and usage agreement.                  *
 * -------------------------------------------------------------------------- */
#include "NtCForces.h"  
#include <string.h>
#include <sstream>
#include <Utils.h>
#include "ParameterReader.h"

    NTC_Torque::NTC_Torque (SimbodyMatterSubsystem& matter,ParameterReader& myParameterReader,  NTC_PAR_Class& myNTC_PAR_Class, BiopolymerClassContainer & myBiopolymerClassContainer, std::ostream& outputStream ) : matter(matter),myParameterReader(myParameterReader), myNTC_PAR_Class (myNTC_PAR_Class), myBiopolymerClassContainer(myBiopolymerClassContainer), outputStream(outputStream)
        { 
    };    
    
    void NTC_Torque::calcForce(const State& state, Vector_<SpatialVec>& bodyForces,  
            Vector_<Vec3>& particleForces, Vector& mobilityForces) const 
        {  
        double energy = 0.0;        
        MobilizedBody body1;
        MobilizedBody body2;
        MobilizedBody body3;
        MobilizedBody body4;
        
        MobilizedBody body5;
        
        Transform transform1;
        Transform transform2;
        double forceConstant;
        double torqueConstant;
        double dutyCycle; //must be between 0 and 1.  at 1, force is applied all the time.  at 0, basically never applied.    
        double scrubberPeriod;
        double cutoffRadius;
        double pot_angle;
        double angle;
        double x_d1,x_d2,x_d3,x_d4;
        double y_d1,y_d2,y_d3,y_d4;
        double z_d1,z_d2,z_d3,z_d4;                   
        double d_d1_x,d_d1_y,d_d1_z;
        double d_d2_x,d_d2_y,d_d2_z;
        double d_d3_x,d_d3_y,d_d3_z;
        double cross_1_x,cross_1_y,cross_1_z;
        double cross_2_x,cross_2_y,cross_2_z;
        double d_t,d_t2;
        double cross_3_x,cross_3_y,cross_3_z;
        double direction_x,direction_y,direction_z;
        double rgsq,fg,hg,gaa,gbb,fga,hgb;
        double dfgx,dfgy,dfgz,dthx,dthy,dthz;
        double dtfx,dtfy,dtfz;
        double s_x2,s_y2,s_z2;
        double force_a1_x,force_a1_y,force_a1_z;
        double force_a2_x,force_a2_y,force_a2_z;        
        double force_a3_x,force_a3_y,force_a3_z;
        double force_a4_x,force_a4_y,force_a4_z;
        double PI = 3.14159265359;     
        double dih,bias;
        int    value,i;
        double prob[361];
        double diff_vec12 = 0.0;
        double diff_vec13 = 0.0;
        double diff_vec23 = 0.0;
        double diff_angle_123 = 0.0;       
        double fraction = 2.0;
        double fraction2 = 1.0;
        
        double ranA, ran2, ran;
        
        double b_norm,t_norm,dot_AB;

        AtomSpringContainer atomSpringContainer;
        
        for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) 
        { 
          
            String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain;            
            NTC_PAR_BondRow myNTC_PAR_BondRow = myNTC_PAR_Class.myNTC_PAR_BondMatrix.myNTC_PAR_BondRow[(myParameterReader.ntc_class_container.getNTC_Class(r)).NTC_PAR_BondRowIndex];
            String basePairIsTwoTransformForce="ntcstep";
            ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;
            ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).SecondBPResidue;
            ResidueID myResidueNumber,myResidueNumber2;
            Vec3  state_1,state_2,state_3,state_4;

        if((myParameterReader.ntc_class_container.getNTC_Class(r)).twobody == 0 &&
           (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody   == 0) {              
            
	    if ( myNTC_PAR_BondRow.bondLength[0] == 0.0 ) {
//		cout << "torsion " << r << " is real torsion" << endl;
            
         //   myResidueNumber = residueNumber1;            
         //   myResidueNumber.ResidueNumber += stoi(myNTC_PAR_BondRow.atom_shift[0]);             
        
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 1) myResidueNumber = residueNumber2;
            
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 1) myResidueNumber = residueNumber2;
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 1) myResidueNumber = residueNumber2;
            
            body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]); 

            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 1) myResidueNumber = residueNumber2;

            body4 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            Vec3 stationD = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            state_4 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);               
            
            torqueConstant = myNTC_PAR_BondRow.torqueConstant;            
            
            Vec3 d_d1,d_d2,d_d3;
            
            d_d1 = state_2 - state_1;
            d_d2 = state_3 - state_2;
            d_d3 = state_4 - state_3;
            
            Vec3 cross_1, cross_2;
            
            cross_1 = d_d1 % d_d2;
            cross_2 = d_d2 % d_d3;
            
            cross_1 = cross_1 / cross_1.norm();
            cross_2 = cross_2 / cross_2.norm();
        
            Vec3 cross_3;
            
            cross_3 = cross_1 % cross_2;
            
     angle = return_angle(cross_1,cross_2,cross_3,d_d2);
     
     double dist_ang = return_dist_ang(angle,myNTC_PAR_BondRow.rotationAngle);
     
    if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 0) pot_angle = torqueConstant*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight*(-sin((dist_ang + 180.0)/57.295779513))*(360.0/57.295779513 + 1.0)/(1.0 + myNTC_PAR_BondRow.CONFALVALUE)/(360.0/57.295779513)*(1.0-sqrt(pow((dist_ang),2))/(180.0)); 
     
     Vec3 torque;    
     
       if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 0) 
          
       {   
           
         torque = d_d2/d_d2.norm()*pot_angle;
         
       if(torque.norm() < 1E+3) {  
         
          fraction2 = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
          fraction  = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*torque.norm();
          
           bodyForces[body1.getMobilizedBodyIndex()] = bodyForces[body1.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(torque,Vec3(0));          
           
           bodyForces[body4.getMobilizedBodyIndex()] = bodyForces[body4.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(torque,Vec3(0));          
           
	   bodyForces[body2.getMobilizedBodyIndex()] = bodyForces[body2.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(torque,Vec3(0));            
           
           bodyForces[body3.getMobilizedBodyIndex()] = bodyForces[body3.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(torque,Vec3(0));         
           
          };           

        };
       
       if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 1) {
           
        dih = 0;
        value = -1;
        bias = 0;
           
        angle *= 57.295779513;
         
      myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]++;        
        
       if(isfinite(angle) == 1) { 
        
        i = (int) round(angle);
        
        double angle_0;
        
       angle_0 = 0.0; 
       
    if(myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) {       
        
      for(i=1;i<=360;i++) {  
    
        myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= (myParameterReader.ntc_class_container.getNTC_Class(r)).weight2*exp(-pow((angle - angle_0)/2.0,2))*exp(-sqrt(pow(myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))/1000.0);
    
        angle_0 += 1.0;
        
      };
    };
        
        value = i;
                  
         bias = -(myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value] - myBiopolymerClassContainer.hist[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value-1])/(1.0);
         
         pot_angle = torqueConstant*(-sin((dist_ang + 180.0)/57.295779513))*(360.0/57.295779513 + 1.0)/(1.0 + myNTC_PAR_BondRow.CONFALVALUE)/(360.0/57.295779513);
         
         pot_angle -= pot_angle*(-(sqrt(pow((dist_ang),2))/(180.0)-1.0));
       
         torque = d_d2/d_d2.norm()*(pot_angle)/(1.0+(myParameterReader.ntc_class_container.getNTC_Class(r)).weight2)*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
         
       if(torque.norm() < 1E+3) {  
         
          fraction2 = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
          fraction  = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*torque.norm();
          
           bodyForces[body1.getMobilizedBodyIndex()] = bodyForces[body1.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(torque,Vec3(0));          
           
           bodyForces[body4.getMobilizedBodyIndex()] = bodyForces[body4.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(torque,Vec3(0));           
           
	   bodyForces[body2.getMobilizedBodyIndex()] = bodyForces[body2.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(torque,Vec3(0));             
           
           bodyForces[body3.getMobilizedBodyIndex()] = bodyForces[body3.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(torque,Vec3(0));         
           
          };        
        
           
       if( isfinite(bias) == 1 && sqrt(pow(bias,2)) > 0.0) { 
           
       // torque = -d_d2/d_d2.norm()*(bias)*sqrt(pow(pot_angle,2))/sqrt(pow(bias,2))*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight2*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
           
         torque =  -d_d2/d_d2.norm()*bias; 
           
    //     bodyForces[body1.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
    //     bodyForces[body4.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0));
    //     bodyForces[body2.getMobilizedBodyIndex()] += SpatialVec(torque,Vec3(0));
    //     bodyForces[body3.getMobilizedBodyIndex()] -= SpatialVec(torque,Vec3(0)); 
         
       if(torque.norm() < 1E+3) {  
           
          fraction  = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*torque.norm();
          fraction2 = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
          
           bodyForces[body1.getMobilizedBodyIndex()] = bodyForces[body1.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(torque,Vec3(0));           
           
           bodyForces[body4.getMobilizedBodyIndex()] = bodyForces[body4.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(torque,Vec3(0));           
           
	   bodyForces[body2.getMobilizedBodyIndex()] = bodyForces[body2.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(torque,Vec3(0));             
           
           bodyForces[body3.getMobilizedBodyIndex()] = bodyForces[body3.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(torque,Vec3(0));         
           
          };
         };
        };
       }; 
     } else {

            Vec3  state_1;
            Vec3  state_2;
        
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            Vec3 ptp = state_2 - state_1;
            double d = ptp.norm(); //sqrt(pow(x_d2-x_d1,2) + pow(y_d2-y_d1,2) + pow(z_d2-z_d1,2));
            double frc;
            Vec3   frcVec;
            
    if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 0) {
        
      frc  = (d*(-exp(-(d-myNTC_PAR_BondRow.bondLength[0]))) - (1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0]))))
                /pow(1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0])),2)*myNTC_PAR_BondRow.springConstant[0]*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;         
        
      frcVec = (frc)*ptp/d;
      
     if(frcVec.norm() < 1E+3) { 
      
      fraction2 = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
      fraction  = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*frcVec.norm();
         
      bodyForces[body1.getMobilizedBodyIndex()] = bodyForces[body1.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(frcVec,Vec3(1));     
      
      bodyForces[body2.getMobilizedBodyIndex()] = bodyForces[body2.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(frcVec,Vec3(1));       
        
     };
    };
  
    
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).meta == 1) {  
  
      double prob_d[51];
      
      double dist = 0.0;
      
      bias = 0.0;
      
      double d_0; 
      
      double average_d;
      
      myBiopolymerClassContainer.av_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += d;
      
      average_d = 2.0*(myBiopolymerClassContainer.av_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/
      myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/200.0;
      
    if(myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       myBiopolymerClassContainer.counter_meta[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%1000 == 0) {       
       
      d_0 = 0.0;
      
      for(i=1;i<=200;i++) { 
       
       myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= (myParameterReader.ntc_class_container.getNTC_Class(r)).weight2*exp(-pow((d - d_0)/average_d,2))*exp(-sqrt(pow(myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2))/1000.0);
       
       d_0 += average_d;
       
      };
    };

       d_0 = 0.0;
        
      for(i=1;i<=200;i++) { 
       
          if((d - d_0) < 0.5*average_d) value = i; 
          
          d_0 += average_d;
          
       };
       
       if(value > 1 && value <= 200) bias = -(myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value] - myBiopolymerClassContainer.hist_d[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][value-1])/(average_d);
              
       frc  = (d*(-exp(-(d-myNTC_PAR_BondRow.bondLength[0]))) - (1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0]))))
                /pow(1.0 + exp(-(d-myNTC_PAR_BondRow.bondLength[0])),2);        
       
       frc =  frc/(1.0 + (myParameterReader.ntc_class_container.getNTC_Class(r)).weight2);
        
       frcVec = (frc)*ptp/d*(myParameterReader.ntc_class_container.getNTC_Class(r)).weight;
       
    if(frcVec.norm() < 1E+3) {
        
       fraction  = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*frcVec.norm();
       fraction2 = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight;        
         
       bodyForces[body1.getMobilizedBodyIndex()] = bodyForces[body1.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(frcVec,Vec3(1)); 
       
       bodyForces[body2.getMobilizedBodyIndex()] = bodyForces[body2.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(frcVec,Vec3(1));       
                
    };
         
     if( isfinite(bias) == 1 && sqrt(pow(bias,2)) > 0.0) {   
         
        frcVec = (bias)*ptp/d;
    
      if(frcVec.norm() < 1E+3) {  
        
        fraction  = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight*frcVec.norm();
        fraction2 = (myParameterReader.ntc_class_container.getNTC_Class(r)).weight; 
        
        bodyForces[body1.getMobilizedBodyIndex()] = bodyForces[body1.getMobilizedBodyIndex()] - (fraction2)*SpatialVec(frcVec,Vec3(1));       
        
        bodyForces[body2.getMobilizedBodyIndex()] = bodyForces[body2.getMobilizedBodyIndex()] + (fraction2)*SpatialVec(frcVec,Vec3(1));         

      };
     };
    }; 
   };
 };
};

double prefactor_12=-1.0,prefactor_13=-1.0,prefactor_23=-1.0;
      
Vec3 d12;
Vec3 d13;
Vec3 d23;
double d_t_12;
double d_t_13;
double d_t_23;
int    pos_12_x, pos_12_y, pos_12_z;
int    pos_12b_x, pos_12b_y, pos_12b_z;
int    pos_13_x, pos_13_y, pos_13_z;
int    pos_23_x, pos_23_y, pos_23_z;
int    pos_angle;
Vec3 d21;
Vec3 frcVec;
double d_0;
double d_0_x,d_0_y,d_0_z;
double r_1;
double r_2;
double d_3;
int    k;

double dL_norm_2;
      
double hist_d_max;
double Z_state_X,Z_state_Y,Z_state_Z;
double Z_state_angle;

double sum_grad_angle=0.0;

double sum_grad_X=0.0, sum_grad_Y=0.0, sum_grad_Z=0.0;

Vec3   frcVec_B;

double delta[101];
double delta_x[101],delta_y[101],delta_z[101];

Vec3 state_1,state_2;

double d_x,d_x2,d_x3,d_y,d_y2,d_y3,d_z,d_z2,d_z3;
double dL_norm, dL_norm2, dL_norm3;
double delta_Lx_Z, delta_Ly_Z, delta_Lz_Z;

int    r;

for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 

  if((myParameterReader.ntc_class_container.getNTC_Class(r)).threebody == 1) {  
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_threebody;
      
      ResidueID residueNumber3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_threebody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"C4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"C4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"C4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_threebody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"C4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"C4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"C4*");

      String chainId3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_chain_threebody;
      
      MobilizedBody body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId3,residueNumber3,"C4*");
      Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId3,residueNumber3,"C4*");
      Vec3 state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId3,residueNumber3,"C4*");
 
      
      Vec3 d12 = state_2 - state_1;
      Vec3 d13 = state_3 - state_1;
      Vec3 d23 = state_3 - state_2;
      
      d_t_12 = d12.norm();
      d_t_13 = d13.norm();
      d_t_23 = d23.norm();
      
      d21 = state_2 - state_1;
 
      myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
      
    //  if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {
        
          Z_state_X = 0.0;
          Z_state_Y = 0.0;
          Z_state_Z = 0.0;
          Z_state_angle = 0.0;
          
    //  };
      
      r_1 = d12.norm();
      r_2 = d23.norm();
      
      d12 /= d12.norm();
      d23 /= d23.norm();
      
      d_3 = dot(d12,d23); 
      
      d_3 /= (r_1*r_2);
      
      angle = acos(d_3);

     angle *= 180.0/PI;
      
    //  d12 = (state_1%state_2);
    //  d13 = (state_1%state_3);
    //  d23 = (state_2%state_3); 
      
     diff_angle_123 += angle;     
      
    // std::cout << angle << " " << diff_angle_123 << "\n";
     
     myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = (angle); // - myBiopolymerClassContainer.angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     
     myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d12[0]); //- myBiopolymerClassContainer.d_x12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d12[1]); //- myBiopolymerClassContainer.d_y12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d12[2]); //- myBiopolymerClassContainer.d_z12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;     
      
     myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d13[0]); //- myBiopolymerClassContainer.d_x13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d13[1]); //- myBiopolymerClassContainer.d_y13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d13[2]); //- myBiopolymerClassContainer.d_z13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;       
     
     myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d23[0]); //- myBiopolymerClassContainer.d_x23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d23[1]); //- myBiopolymerClassContainer.d_y23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
     myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d23[2]); //- myBiopolymerClassContainer.d_z23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;        
     
     
      myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
    if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10 == 0 ||
       myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {    
     
       myBiopolymerClassContainer.stamp_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]; 
       
    } 
      
    double Corr_func_angle_t = 0.0;
    
    if(myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
        myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
        myBiopolymerClassContainer.stamp_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
        myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
        /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
    Corr_func_angle_t = (myBiopolymerClassContainer.stamp_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
    myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
    /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
    )*(myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])
    /
    (sqrt(pow(myBiopolymerClassContainer.stamp_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
    myBiopolymerClassContainer.av_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
    /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))
    *sqrt(pow(myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));      
    
    myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_angle_t;
    
    if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10 == 0 ||
       myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) { 
     
       myBiopolymerClassContainer.stamp_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_angle_t; 
       
    }  
    
     if((double)(rand()%100)/100.0 <= 1.0/(1.0 + exp(-Corr_func_angle_t))) {
       
        myBiopolymerClassContainer.probability_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   = 1; 
        myBiopolymerClassContainer.counter_event_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1.0;
         
     } else {
       
        myBiopolymerClassContainer.probability_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   = 0; 
        myBiopolymerClassContainer.counter_event_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0; 
        
     };    
    
  double q_0;
  
 if(myBiopolymerClassContainer.probability_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {  
  
  q_0 = -1.0;
  
 if(myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) { 
      
  for(i=1;i<=100;i++) {    
      
    if(myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-(pow(((myBiopolymerClassContainer.stamp_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_angle_t - myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
     -q_0)/0.02,2))); 
      
    if(myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-(pow(((myBiopolymerClassContainer.stamp_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_angle_t - myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
     -q_0)/0.02,2))); 

     sum_grad_angle += myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
    
   //  std::cout << myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " " << myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << "  DELTA_L_ANGLE \n";      
      
      Z_state_angle += myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
    
      q_0 += 0.02;
     
    };
   };
  };
     
     myBiopolymerClassContainer.dL_angle1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = ((myBiopolymerClassContainer.stamp_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_angle_t - myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)
     -q_0);//myBiopolymerClassContainer.diff_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
     
     myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
     ((angle - myBiopolymerClassContainer.angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1)
     + myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     + myBiopolymerClassContainer.diff_L_angle_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
     
     myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
                                                                                                              myBiopolymerClassContainer.dL_angle2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
                                                                                                              myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
                                                                                    
     if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10== 0) myBiopolymerClassContainer.dL_angle2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];                                                                                                        
     
     if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10== 0)myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL_angle2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
     
     if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10 ==0)myBiopolymerClassContainer.diff_L_angle_last3[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] 
     - myBiopolymerClassContainer.diff_L_angle_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
                                                                                                                   
     if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10 == 0) myBiopolymerClassContainer.diff_L_angle_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_L_angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];                                                                                                                   
                                                                                                                   
      // FINISH ANGLES
      
      // BEGIN D_12
      
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100 == 0 ||
       myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {         
     
      myBiopolymerClassContainer.stamp_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
    }
    
    double Corr_func_12_x=0.0;
      if(myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
          myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
      Corr_func_12_x = (myBiopolymerClassContainer.stamp_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));
    
    double Corr_func_12_y=0.0;
      if(myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
          myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
      Corr_func_12_y = (myBiopolymerClassContainer.stamp_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));

    double Corr_func_12_z=0.0;
     if(myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
         myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
      Corr_func_12_z = (myBiopolymerClassContainer.stamp_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));      
      
     if((double)(rand()%100)/100.0 <= 1.0/(1.0 + exp(-(Corr_func_12_x +
                                             Corr_func_12_y +
                                             Corr_func_12_z)/3.0))) {
        
         myBiopolymerClassContainer.probability_trans_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1;
         myBiopolymerClassContainer.counter_event_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1.0;
         
      } else {
          
         myBiopolymerClassContainer.probability_trans_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0; 
         myBiopolymerClassContainer.counter_event_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
          
      };       
      
      
      myBiopolymerClassContainer.dL12_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
     
      myBiopolymerClassContainer.dL12_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
            
      myBiopolymerClassContainer.dL12_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);           
        
      // X :
      
      myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_x12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL12_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L12_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L12_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {
 
      myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_x12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
      myBiopolymerClassContainer.diff_L12_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];         
        
      myBiopolymerClassContainer.dL12_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
            
    };  
    
      // Y :
      
      myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_y12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL12_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L12_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L12_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {      
      
      myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_y12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL12_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };
    
      // Z :
      
      myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_z12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL12_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L12_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L12_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {       
      
      myBiopolymerClassContainer.diff_L12_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL12_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_z12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };      
      
      
      // END 12
      
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100 == 0 ||
       myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {        
        
      myBiopolymerClassContainer.stamp_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
    }
    
    double Corr_func_13_x=0.0;
     if(myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
         myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
     Corr_func_13_x = (myBiopolymerClassContainer.stamp_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));
    
    double Corr_func_13_y=0.0; 
     if(myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
         myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
     Corr_func_13_y = (myBiopolymerClassContainer.stamp_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));

    double Corr_func_13_z=0.0; 
     if(myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
         myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
      Corr_func_13_z = (myBiopolymerClassContainer.stamp_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));            
 
     if((double)(rand()%100)/100.0 <= 1.0/(1.0 + exp(-(Corr_func_13_x +
                                             Corr_func_13_y +
                                             Corr_func_13_z)/3.0))) {
        
         myBiopolymerClassContainer.probability_trans_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1;
         myBiopolymerClassContainer.counter_event_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1.0;
     
      } else {
          
         myBiopolymerClassContainer.probability_trans_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0;
         myBiopolymerClassContainer.counter_event_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
          
      };       
      
      myBiopolymerClassContainer.dL13_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
        
      myBiopolymerClassContainer.dL13_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
       
      myBiopolymerClassContainer.dL13_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);           
              
      // X :
      
      myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_x13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL13_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L13_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L13_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {
 
      myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_x13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
      myBiopolymerClassContainer.diff_L13_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];         
        
      myBiopolymerClassContainer.dL13_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
            
    };  
    
      // Y :
      
      myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_y13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL13_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L13_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L13_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {      
      
      myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_y13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL13_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };
    
      // Z :
      
      myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_z13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL13_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L13_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L13_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {       
      
      myBiopolymerClassContainer.diff_L13_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL13_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_z13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };        
      
      
      // END 13
      
      // BEGIN 23
      
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
        
    if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100 == 0 ||
       myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {         
     
      myBiopolymerClassContainer.stamp_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
    }
    
    double Corr_func_23_x=0.0; 
    if(myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
        myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
    Corr_func_23_x = (myBiopolymerClassContainer.stamp_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));
    
    double Corr_func_23_y=0.0;
    if(myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
        myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)    
    Corr_func_23_y = (myBiopolymerClassContainer.stamp_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));

    double Corr_func_23_z=0.0; 
    if(myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
        myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
       myBiopolymerClassContainer.stamp_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)    
    Corr_func_23_z = (myBiopolymerClassContainer.stamp_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));      
      
     if((double)(rand()%100)/100.0 <= 1.0/(1.0 + exp(-(Corr_func_23_x +
                                             Corr_func_23_y +
                                             Corr_func_23_z)/3.0))) {
        
         myBiopolymerClassContainer.probability_trans_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1;
         myBiopolymerClassContainer.counter_event_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1.0;     
     
      } else {
          
         myBiopolymerClassContainer.probability_trans_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0; 
         myBiopolymerClassContainer.counter_event_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0; 
         
      };       
      
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100 == 0) { 
     
      myBiopolymerClassContainer.stamp_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_23_x*Corr_func_12_x*Corr_func_13_x;
      myBiopolymerClassContainer.stamp_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_23_y*Corr_func_12_y*Corr_func_13_y;
      myBiopolymerClassContainer.stamp_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_23_z*Corr_func_12_z*Corr_func_13_z;  
    
      myBiopolymerClassContainer.stamp_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.stamp_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.stamp_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];    
      myBiopolymerClassContainer.stamp_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.stamp_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];  
    
      myBiopolymerClassContainer.stamp_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.stamp_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.stamp_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];    
      myBiopolymerClassContainer.stamp_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.stamp_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];  
      
    } 
    
      myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_23_x*Corr_func_12_x*Corr_func_13_x;
      myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_23_y*Corr_func_12_y*Corr_func_13_y;
      myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_23_z*Corr_func_12_z*Corr_func_13_z;        
      
      myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];     
      
      myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
      
      
      
  if(myBiopolymerClassContainer.probability_trans_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {  
  
  if(myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {      
      
  q_0 = -1.0;
      
  for(i=1;i<=100;i++) {         
      
    if(myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow((((myBiopolymerClassContainer.stamp_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_13_x*Corr_func_23_x*Corr_func_12_x - myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))-q_0)/0.02,2));


    if(myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_13_y*Corr_func_23_y*Corr_func_12_y - myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));      
      

    if(myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_13_z*Corr_func_23_z*Corr_func_12_z - myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));       
      
    if(myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_13_x*Corr_func_23_x*Corr_func_12_x - myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));

    if(myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      =  exp(-pow(((myBiopolymerClassContainer.stamp_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_13_y*Corr_func_23_y*Corr_func_12_y - myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));
      
      
    if(myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_13_z*Corr_func_23_z*Corr_func_12_z - myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));       
    
   //  std::cout << myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " " <<  myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " DL13 , DELTA L 13 \n";    
  
      Z_state_X += myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      Z_state_Y += myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      Z_state_Z += myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];      
    
      sum_grad_X += myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Y += myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Z += myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
    
      q_0 += 0.02;
      
    };
   };
  };   
  
  if(myBiopolymerClassContainer.probability_trans_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {  
  
  q_0 = -1.0;
  
  if(myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {  
      
  for(i=1;i<=100;i++) {         
      
    if(myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12_x*Corr_func_23_x*Corr_func_13_x - myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));


    if(myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12_y*Corr_func_23_y*Corr_func_13_y - myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));      
      

    if(myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12_z*Corr_func_23_z*Corr_func_13_z - myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));       
      
    if(myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12_x*Corr_func_23_x*Corr_func_13_x - myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));

    if(myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      =  exp(-pow(((myBiopolymerClassContainer.stamp_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12_y*Corr_func_23_y*Corr_func_13_y - myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));
      
      
    if(myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12_z*Corr_func_23_z*Corr_func_13_z - myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2)); 
    
    
      Z_state_X += myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      Z_state_Y += myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      Z_state_Z += myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];       
    
      sum_grad_X += myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Y += myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Z += myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];    
    
      q_0 += 0.02;
     
    };
   };
  };   
      
      
  if(myBiopolymerClassContainer.probability_trans_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {  
  
  q_0 = -1.0;
  
  if(myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {  
      
  for(i=1;i<=100;i++) {         
      
    if(myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_23_x*Corr_func_13_x*Corr_func_12_x - myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));


    if(myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_23_y*Corr_func_13_y*Corr_func_12_y - myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));      
      

    if(myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_23_z*Corr_func_13_z*Corr_func_12_z - myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));       
      
    if(myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_23_x*Corr_func_13_x*Corr_func_12_x - myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));

    if(myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      =  exp(-pow(((myBiopolymerClassContainer.stamp_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_23_y*Corr_func_13_y*Corr_func_12_y - myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));
      
      
    if(myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_23_z*Corr_func_13_z*Corr_func_12_z - myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));   
    
   //   std::cout << myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " " <<  myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " DL23 , DELTA L 23 \n";  
    
      sum_grad_X += myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Y += myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Z += myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];    
    
      Z_state_X += myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      Z_state_Y += myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      Z_state_Z += myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];    
      
      q_0 += 0.02;
      
     };
   };
  };

        
      myBiopolymerClassContainer.dL23_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
           
      myBiopolymerClassContainer.dL23_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
             
      myBiopolymerClassContainer.dL23_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);           
        
      // X :
      
      myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_x23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL23_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L23_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L23_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {
 
      myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_x23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
      myBiopolymerClassContainer.diff_L23_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];         
        
      myBiopolymerClassContainer.dL23_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
            
    };  
    
      // Y :
      
      myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_y23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL23_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L23_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L23_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {      
      
      myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_y23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL23_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };
    
      // Z :
      
      myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - 
      myBiopolymerClassContainer.d_z23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL23_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L23_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L23_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
    if(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {       
      
      myBiopolymerClassContainer.diff_L23_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL23_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_z23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };      

      
 // END 23      
      
  if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]) == 1 ||
    (int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10== 0) {     
      
      myBiopolymerClassContainer.d_x12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[0];
      myBiopolymerClassContainer.d_y12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[1];
      myBiopolymerClassContainer.d_z12_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[2]; 
      
      myBiopolymerClassContainer.d_x13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d13[0];
      myBiopolymerClassContainer.d_y13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d13[1];
      myBiopolymerClassContainer.d_z13_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d13[2]; 

      myBiopolymerClassContainer.d_x23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d23[0];
      myBiopolymerClassContainer.d_y23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d23[1];
      myBiopolymerClassContainer.d_z23_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d23[2];       
      
      myBiopolymerClassContainer.angle_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = angle;
      
     };
  };     
};


for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 
   
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).twobody == 1) {
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_twobody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"C4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"C4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"C4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_twobody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"C4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"C4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"C4*");
      
      Vec3 d12 = state_2 - state_1;
      
      d_t_12 = d12.norm();
      
    //  d12 = (state_1%state_2);
      
      myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
      
      myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d12[0]); //- myBiopolymerClassContainer.d_x12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
      
      myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d12[1]); //- myBiopolymerClassContainer.d_y12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
      
      myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (d12[2]); //- myBiopolymerClassContainer.d_z12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/0.1;
      
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
        
    if((int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100 == 0 ||
       myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {         
     
      myBiopolymerClassContainer.stamp_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      myBiopolymerClassContainer.stamp_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
    }
     
    double Corr_func_12b_x = 0.0;
    
      if(myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - 
          myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 && myBiopolymerClassContainer.stamp_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
      Corr_func_12b_x = (myBiopolymerClassContainer.stamp_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));
    
    double Corr_func_12b_y = 0.0;
    
     if(myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
         myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 && myBiopolymerClassContainer.stamp_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
      Corr_func_12b_y = (myBiopolymerClassContainer.stamp_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));

    double Corr_func_12b_z = 0.0;
    
      if(myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
          myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
      && myBiopolymerClassContainer.stamp_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0)
      Corr_func_12b_z = (myBiopolymerClassContainer.stamp_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/(
       sqrt(pow(myBiopolymerClassContainer.stamp_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))    
      *sqrt(pow(myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));      
      
     if((double)(rand()%100)/100.0 <= 1.0/(1.0 + exp(-(Corr_func_12b_x 
                                             + Corr_func_12b_y
                                             + Corr_func_12b_z)/3.0))) {
        
         myBiopolymerClassContainer.probability_trans_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1;
         myBiopolymerClassContainer.counter_event_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1.0;
     
      } else {
          
         myBiopolymerClassContainer.probability_trans_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0; 
         myBiopolymerClassContainer.counter_event_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += 1.0;
         
      };        
      
    if((int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]) == 1 ||
       (int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100 == 0) { 
     
      myBiopolymerClassContainer.stamp_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_12b_x;
      myBiopolymerClassContainer.stamp_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_12b_y;
      myBiopolymerClassContainer.stamp_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = Corr_func_12b_z;
    
    //  std::cout << Corr_func_12b_x << " " << Corr_func_12b_y << " " << Corr_func_12b_z << " corr 12 xyz " << std::endl;
        
    } 
    
      myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_12b_x;
      myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_12b_y;
      myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] += Corr_func_12b_z;        
      
      
  if(myBiopolymerClassContainer.probability_trans_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {  
  
  double q_0 = -1.0;
  
  if(myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {  
      
  for(i=1;i<=100;i++) {         
      
    if(myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12b_x - myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));


    if(myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12b_y - myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));      
      

    if(myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      += exp(-pow(((myBiopolymerClassContainer.stamp_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12b_z - myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));   
  
    if(myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12b_x - myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));

    if(myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      =  exp(-pow(((myBiopolymerClassContainer.stamp_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12b_y - myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));
      
      
    if(myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) 
        myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]   
      = exp(-pow(((myBiopolymerClassContainer.stamp_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])*(Corr_func_12b_z - myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])/
     pow(myBiopolymerClassContainer.av_corr_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)-q_0)/0.02,2));       
    
      sum_grad_X += myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Y += myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      sum_grad_Z += myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];      
    
     Z_state_X += myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
     Z_state_Y += myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
     Z_state_Z += myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i];
      
  //   std::cout << myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " DL 12 " << myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << "\n";
    
      q_0 += 0.02;
      
   };
  };
  // return;
   
  };
      
      myBiopolymerClassContainer.dL12b_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
     
      myBiopolymerClassContainer.dL12b_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);
   
      myBiopolymerClassContainer.dL12b_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = (myBiopolymerClassContainer.stamp_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]    
      )*(myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
     /myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
      )/pow(myBiopolymerClassContainer.av_d12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2);           
       
      // X :
      
      myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_x12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL12b_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L12b_x_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L12b_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {
 
      myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_x12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];        
        
      myBiopolymerClassContainer.diff_L12b_x_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];         
        
      myBiopolymerClassContainer.dL12b_x2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
            
    };  
    
      // Y :
      
      myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_y12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL12b_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L12b_y_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L12b_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];

    if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {      
      
      myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_y12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_y_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL12b_y2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };
    
      // Z :
      
      myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.d_z12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] +
      myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]   
      = myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - myBiopolymerClassContainer.dL12b_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.diff_L12b_z_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] =
      myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] -
      myBiopolymerClassContainer.diff_L12b_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
    if(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1 ||
       (int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]%10 == 0) {       
      
      myBiopolymerClassContainer.diff_L12b_z_last2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      

      myBiopolymerClassContainer.dL12b_z2[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
      
      myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
      myBiopolymerClassContainer.diff_z12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
      
    };

// LAST 12   
      
    if((int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%10== 0 ||
       (int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]) == 1) { 
      
      myBiopolymerClassContainer.d_x12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[0];
      myBiopolymerClassContainer.d_y12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[1];
      myBiopolymerClassContainer.d_z12b_last[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = d12[2];
    
      };
    }; 
  };
 
  

      
for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 
 
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).threebody == 1) {  
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_threebody;
      
      ResidueID residueNumber3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_threebody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"C4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"C4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"C4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_threebody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"C4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"C4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"C4*");

      String chainId3=(myParameterReader.ntc_class_container.getNTC_Class(r)).third_res_chain_threebody;
      
      MobilizedBody body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId3,residueNumber3,"C4*");
      Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId3,residueNumber3,"C4*");
      Vec3 state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId3,residueNumber3,"C4*");
      
      
      MobilizedBody body4 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"C4");
      MobilizedBody body5 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"C4");
      MobilizedBody body6 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId3,residueNumber3,"C4");          
      
//   
//    
// DEF D12,D13,D23 :      
//      
      
//      Vec3 d12 = (state_1%state_2);
//      Vec3 d13 = (state_1%state_3);
//      Vec3 d23 = (state_2%state_3); 

      double W_factor=0.0;      
      
      Vec3 d12 = state_2 - state_1;
      Vec3 d13 = state_3 - state_1;
      Vec3 d23 = state_3 - state_2;

      d_t_12 = d12.norm();
      d_t_13 = d13.norm();
      d_t_23 = d23.norm();      
      
      if(Z_state_X == 0.0) Z_state_X = 1.0;
      if(Z_state_Y == 0.0) Z_state_Y = 1.0;
      if(Z_state_Z == 0.0) Z_state_Z = 1.0;
      if(Z_state_angle == 0.0) Z_state_angle = 1.0;      
      
    // ANGLES 
    
      d_0 = -1.0 - 1.0/100.0;
    
      pos_angle = 0;
      
    double log_pot = 0.0; 
    
    myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1E-2;
    
 if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]) >= 100) {    
    
  if(myBiopolymerClassContainer.probability_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {   
     
   if(Z_state_angle != 0.0) {  
     
      for(i=1;i<=100;i++) { 
  
     myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1E-2;
     
     
     double d_angle = (myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_angle - sum_grad_angle*myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])/pow(Z_state_angle,2);
  
     
     W_factor = 1.0;

       delta[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*(d_angle*(
       myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_angle - 
       myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + d_angle);    
       // *
    //   exp(-pow(myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0);
     
    // std::cout << myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " HIST ANGLE THREEBODY \n";
         
   //  if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {      
       
    if(myBiopolymerClassContainer.dL_angle1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) {
        
            myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta[i]*0.001
            *myBiopolymerClassContainer.counter_event_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]; 
    
      //     std::cout << pos_angle << " " << myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]/myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] << " " << std::endl;
        
        };
          
       d_0 += (2.0)/100.0;
       
      };
   }; 
  };
  
  d_0 = 0.0;
  
  pos_angle = 0;
  
  for(i=1;i<=100;i++) {   
  
     if( sqrt(pow(myBiopolymerClassContainer.dL_angle1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0,2)) <= 0.01 ) {     
     
         pos_angle = i;
         
     };
     
   d_0 += 0.01;
   
 };
      
      double frc;
      double dL_norm,dL_norm2,dL_norm3;
      
     delta_Lx_Z = (myBiopolymerClassContainer.delta_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle]*myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle]*Z_state_angle - sum_grad_angle*myBiopolymerClassContainer.dL_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle])/pow(Z_state_angle,2);      
      
      dL_norm  = sqrt(pow(myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2));
      
      if(pos_angle < 100 && pos_angle >= 1 && delta_Lx_Z != 0.0) { // && myBiopolymerClassContainer.diff_L_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0) {
      
          myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 
          myBiopolymerClassContainer.hist_d_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_angle]/delta_Lx_Z;       
          
       } else {
        
          myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
           
       };
       
     if(sqrt(pow(myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0) {   
       
       frcVec[0] = (1.0 - 2.0*myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*
           exp(-pow(myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))); 
       frcVec[1] = (1.0 - 2.0*myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*
           exp(-pow(myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))); 
       frcVec[2] = (1.0 - 2.0*myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*
           exp(-pow(myBiopolymerClassContainer.bias_angle[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));        
       
       bodyForces[body1.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body1.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body1.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);
       bodyForces[body2.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body2.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body2.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);       
       bodyForces[body3.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body3.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body3.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);
       bodyForces[body4.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body4.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body4.getMobilizedBodyIndex()][1][2] *= (frcVec[2]); 
       bodyForces[body5.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body5.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body5.getMobilizedBodyIndex()][1][2] *= (frcVec[2]); 
       bodyForces[body6.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body6.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body6.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);        
                  
     };   
       
     
     
 // std::cout << " angle "<< pos_angle << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";       
      
      // END ANGLES
       
   if(myBiopolymerClassContainer.probability_trans_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {

      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;      
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_12_x = 0;
      pos_12_y = 0;
      pos_12_z = 0;
      
  if(myBiopolymerClassContainer.dL12_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {      
      
    if(Z_state_X != 0.0 && Z_state_Y != 0.0 && Z_state_Z != 0.0) { 
      
      for(i=1;i<=100;i++) { 
      
      double delta_Lx = (myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_X - myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_X)/(pow(Z_state_X,2));
      
      double delta_Ly = (myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Y - myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Y)/(pow(Z_state_Y,2));

      double delta_Lz = (myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Z - myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Z)/(pow(Z_state_Z,2));      
      
      if(sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)) > 0.0) {    
          
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = sqrt(pow(delta_Lx,2)
                     +  pow(delta_Ly,2)
                     +  pow(delta_Lz,2))/
                   sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2));
      
      } else {
        
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;   
          
      };       
      
      W_factor = 1.0;//sqrt(pow(delta_Lx,2)+pow(delta_Ly,2)+pow(delta_Lz,2));
      

       delta_x[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*(delta_Lx*(
       myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + delta_Lx);
               
            myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_x[i]*0.001
            *myBiopolymerClassContainer.counter_event_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
           
       delta_y[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*(delta_Ly*(
       myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + delta_Ly); 
               
            myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_y[i]*0.001
            *myBiopolymerClassContainer.counter_event_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
        
       delta_z[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Lz*(
       myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Lz);
    
            myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_z[i]*0.001
            *myBiopolymerClassContainer.counter_event_12[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
        
          
        d_0_x += (1.0)/100.0;   
        d_0_y += (1.0)/100.0;
        d_0_z += (1.0)/100.0;
    
      };
     };
    }; 
   };
   
   d_0_x = 0.0;
   d_0_y = 0.0;
   d_0_z = 0.0;
   
   pos_12_x = 0;
   pos_12_y = 0;
   pos_12_z = 0;
   
  for(i=1;i<=100;i++) { 
   
     if( sqrt(pow(myBiopolymerClassContainer.dL12_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= 0.01 ) {    
      
            pos_12_x = i;
         
     };
     
    if( sqrt(pow(myBiopolymerClassContainer.dL12_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= 0.01 ) {     
    
            pos_12_y = i;
        
    };     
     
    if( sqrt(pow(myBiopolymerClassContainer.dL12_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= 0.01 ) {
               
            pos_12_z = i;    
       
    };     
    
    d_0_x += 0.01;   
    d_0_y += 0.01;
    d_0_z += 0.01;
        
  }; 
      
  // std::cout << pos_12_x << " " << pos_12_y << " " << pos_12_z <<  " pos12 xyz " << std::endl;
     
  myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;  
    
      delta_Lx_Z = (myBiopolymerClassContainer.delta_L12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x]*myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x]*Z_state_X - myBiopolymerClassContainer.dL12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x]*sum_grad_X)/(pow(Z_state_X,2));
      
      delta_Ly_Z = (myBiopolymerClassContainer.delta_L12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y]*myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y]*Z_state_Y - myBiopolymerClassContainer.dL12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y]*sum_grad_Y)/(pow(Z_state_Y,2));

      delta_Lz_Z = (myBiopolymerClassContainer.delta_L12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z]*myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z]*Z_state_Z - myBiopolymerClassContainer.dL12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z]*sum_grad_Z)/(pow(Z_state_Z,2));    
  
  
    if(pos_12_x > 1 && pos_12_x < 100 && Z_state_X > 1E-6 && delta_Lx_Z != 0.0) 
    {  
        
     myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_12_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_x]/delta_Lx_Z;
      
    }
    
    if(pos_12_y > 1 && pos_12_y < 100 && Z_state_Y > 1E-6 && delta_Ly_Z != 0.0) 
    {

     myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  =  
     myBiopolymerClassContainer.hist_d_12_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_y]/delta_Ly_Z;
      
    }     
    
    if(pos_12_z > 1 && pos_12_z < 100 && Z_state_Z > 1E-6 && delta_Lz_Z != 0.0) 
    { 

     myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_12_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12_z]/delta_Lz_Z;       
      
     };

     if(sqrt(pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 &&
        sqrt(pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 && 
        sqrt(pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0) {
     
       frcVec[0] = (1.0 - 2.0*myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))); 
       frcVec[1] = (1.0 - 2.0*myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));        
       frcVec[2] = (1.0 - 2.0*myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));       
       
       bodyForces[body1.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body1.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body1.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);        
       bodyForces[body2.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body2.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body2.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body4.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body4.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body4.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);  
       bodyForces[body5.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body5.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body5.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
      
     };
       
    //  std::cout << " 12 "<< pos_12_x << " " << pos_12_y << " " << pos_12_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";
       
     
      
    // std::cout << " 12 "<< pos_12_x << " " << pos_12_y << " " << pos_12_z << " "<< frcVec_B[0] << " " << frcVec_B[1] << " " << frcVec_B[2] << "\n";       
       
     // END D_12
       
     // BEGIN D_13
    
   if(myBiopolymerClassContainer.probability_trans_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {    
      
      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_13_x = 0;
      pos_13_y = 0;
      pos_13_z = 0;
      
  if(myBiopolymerClassContainer.dL13_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL13_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL13_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {      
      
  if(Z_state_X != 0.0 && Z_state_Y != 0.0 && Z_state_Z != 0.0) {    
      
    for(i=1;i<=100;i++) { 
        
      double delta_Lx = (myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_X - myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_X)/(pow(Z_state_X,2));
      
      double delta_Ly = (myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Y - myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Y)/(pow(Z_state_Y,2));

      double delta_Lz = (myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Z - myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Z)/(pow(Z_state_Z,2));      
      
      if(sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)) > 0.0) {    
          
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = sqrt(pow(delta_Lx,2)
                     +  pow(delta_Ly,2)
                     +  pow(delta_Lz,2))/
                   sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2));
      
      } else {
        
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;   
          
      };          
    
      
      W_factor = 1.0; //sqrt(pow(delta_Lx,2)+pow(delta_Ly,2)+pow(delta_Lz,2));
           
       delta_x[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*(delta_Lx*(
       myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])) 
       + delta_Lx);
       
       // *
     //  exp(-pow(myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0);        
       
      // std::cout << myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;

    
 //  if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {    

            myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_x[i]*0.001
            *myBiopolymerClassContainer.counter_event_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
           
  //      };
           
       delta_y[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Ly*
       (myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Ly);
            
       
       // *
     //  exp(-pow(myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0);   
       
     //  std::cout << myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
            
 //  if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {    

            myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_y[i]*0.001
            *myBiopolymerClassContainer.counter_event_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
           
 //      };
                   
           
       delta_z[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Lz*(
       myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Lz);
       
      // 
      // exp(-pow(myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0);  
       
      // std::cout << myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;
            
  //  if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {   

            myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_z[i]*0.001
            *myBiopolymerClassContainer.counter_event_13[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
           
  //       };
          
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;            
        d_0_z += (2.0)/100.0; 
       
      };
     };  
    };
   };
  
   d_0_x = 0.0;
   d_0_y = 0.0;
   d_0_z = 0.0;
   
   pos_13_x = 0;
   pos_13_y = 0;
   pos_13_z = 0;
   
    for(i=1;i<=100;i++) { 
      
     if( sqrt(pow(myBiopolymerClassContainer.dL13_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= 0.01 ) {
               
            pos_13_x = i;

      };
    
     if( sqrt(pow(myBiopolymerClassContainer.dL13_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= 0.01 ) {
               
            pos_13_y = i;       
   
      };

     if( sqrt(pow(myBiopolymerClassContainer.dL13_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= 0.01 ) {
               
            pos_13_z = i;     
  
      };    
      
        d_0_x += 0.01;   
        d_0_y += 0.01;            
        d_0_z += 0.01;       
      
    };
     
 // std::cout <<" dlnorm " << dL_norm << " dlnorm2 " << dL_norm2 << " dlnorm3 " << dL_norm3 << "\n";   
    
  myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;   

      delta_Lx_Z = (myBiopolymerClassContainer.delta_L13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x]*myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x]*Z_state_X - myBiopolymerClassContainer.dL13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x]*sum_grad_X)/(pow(Z_state_X,2));
      
      delta_Ly_Z = (myBiopolymerClassContainer.delta_L13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y]*myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y]*Z_state_Y - myBiopolymerClassContainer.dL13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y]*sum_grad_Y)/(pow(Z_state_Y,2));

      delta_Lz_Z = (myBiopolymerClassContainer.delta_L13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z]*myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z]*Z_state_Z - myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z]*sum_grad_Z)/(pow(Z_state_Z,2));     
  
  
    if(pos_13_x > 1 && pos_13_x < 100 && Z_state_X > 1E-6 && delta_Lx_Z != 0.0) 
    {  
        
     myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_13_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_x]/delta_Lx_Z;
      
    }
    
    if(pos_13_y > 1 && pos_13_y < 100 && Z_state_Y > 1E-6 && delta_Ly_Z != 0.0) 
    {

     myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_13_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_y]/delta_Ly_Z;
      
    }     
    
    if(pos_13_z > 1 && pos_13_z < 100 && Z_state_Z > 1E-6 && delta_Lz_Z != 0.0) 
    { 

     myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  =  
     myBiopolymerClassContainer.hist_d_13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_13_z]/delta_Lz_Z;       
      
     };

     if(sqrt(pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 &&
        sqrt(pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 && 
        sqrt(pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0) {
     
       frcVec[0] = (1.0 - 2.0*myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))); 
       frcVec[1] = (1.0 - 2.0*myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));        
       frcVec[2] = (1.0 - 2.0*myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));        
      
       bodyForces[body1.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body1.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body1.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body3.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body3.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body3.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);   
       bodyForces[body4.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body4.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body4.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body6.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body6.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body6.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);        
       
     };
  
      
   //   std::cout << " 13 "<< pos_13_x << " " << pos_13_y << " " << pos_13_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";  
       
   //    bodyForces[body3.getMobilizedBodyIndex()] +=  SpatialVec(frcVec_B,Vec3(1)); 
   //    bodyForces[body6.getMobilizedBodyIndex()] +=  SpatialVec(frcVec_B,Vec3(1));       
       
       
   //  std::cout << " 13 "<< pos_13_x << " " << pos_13_y << " " << pos_13_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";        
       
       // END 13
       
       // BEGIN 23 
       
   if(myBiopolymerClassContainer.probability_trans_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {        
      
      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_23_x = 0;
      pos_23_y = 0;
      pos_23_z = 0;
      
  if(myBiopolymerClassContainer.dL23_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL23_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL23_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {      
     
   if(Z_state_X != 0.0 && Z_state_Y != 0.0 && Z_state_Z != 0.0) {   
      
      for(i=1;i<=100;i++) {
          
      double delta_Lx = (myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_X - myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_X)/(pow(Z_state_X,2));
      
      double delta_Ly = (myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Y - myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Y)/(pow(Z_state_Y,2));

      double delta_Lz = (myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL13_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Z - myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Z)/(pow(Z_state_Z,2));      
      
      if(sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)) > 0.0) {    
          
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = sqrt(pow(delta_Lx,2)
                     +  pow(delta_Ly,2)
                     +  pow(delta_Lz,2))/
                   sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2));
      
      } else {
        
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;   
          
      };     
      
      W_factor = 1.0;//sqrt(pow(delta_Lx,2)+pow(delta_Ly,2)+pow(delta_Lz,2));
          
       delta_x[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Lx
       *(myBiopolymerClassContainer.dL23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Lx);
       
       // *
     //  exp(-pow(myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0);  
      
      //std::cout << myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl
    
  //   if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {   

            myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_x[i]*0.001*
            myBiopolymerClassContainer.counter_event_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
           
  //       };
          
           
       delta_y[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Ly*(
       myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Ly);
       
       // 
     //  exp(-pow(myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0); 
       
      // std::cout << myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;           
 //   if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {   

            myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_y[i]*0.001*
            myBiopolymerClassContainer.counter_event_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
           
 //        };
       
           
       delta_z[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Lz*(
       myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Lz);
       
       // 
    //   exp(-pow(myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0); 
       
    //   std::cout << myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl; 
       
  //    if((int)(myBiopolymerClassContainer.counter_threebody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) { 

            myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_z[i]*0.001*
            myBiopolymerClassContainer.counter_event_23[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];      
            
  //       };
          
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;            
        d_0_z += (2.0)/100.0;
        
      };
     }; 
    };
   };
  
      d_0_x = 0.0;
      d_0_y = 0.0;
      d_0_z = 0.0;   
      
      pos_23_x = 0;
      pos_23_y = 0;
      pos_23_z = 0;
   
   for(i=1;i<=100;i++) {
       
       if( sqrt(pow(myBiopolymerClassContainer.dL23_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= 0.01 ) {
               
            pos_23_x = i;
            
       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL23_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= 0.01 ) {
               
            pos_23_y = i;       

       };
       
       if( sqrt(pow(myBiopolymerClassContainer.dL23_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= 0.01 ) {
               
            pos_23_z = i;
            
       };       
       
        d_0_x += 0.01;   
        d_0_y += 0.01;            
        d_0_z += 0.01;       
          
     };
     
 // std::cout <<" dlnorm " << dL_norm << " dlnorm2 " << dL_norm2 << " dlnorm3 " << dL_norm3 << "\n";   

  myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0; 
  
      delta_Lx_Z = (myBiopolymerClassContainer.delta_L23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]*myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]*Z_state_X - myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]*sum_grad_X)/(pow(Z_state_X,2));
      
      delta_Ly_Z = (myBiopolymerClassContainer.delta_L23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y]*myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y]*Z_state_Y - myBiopolymerClassContainer.dL23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y]*sum_grad_Y)/(pow(Z_state_Y,2));

      delta_Lz_Z = (myBiopolymerClassContainer.delta_L23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z]*myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z]*Z_state_Z - myBiopolymerClassContainer.dL23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z]*sum_grad_Z)/(pow(Z_state_Z,2));    
    
    if(pos_23_x > 1 && pos_23_x < 100 && Z_state_X > 1E-6 && delta_Lx_Z != 0.0) 
    {  
        
     myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_23_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_x]/delta_Lx_Z;
      
    }
    
    if(pos_23_y > 1 && pos_23_y < 100 && Z_state_Y > 1E-6 && delta_Ly_Z != 0.0) 
    {

     myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_23_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_y]/delta_Ly_Z;
      
    }     
    
    if(pos_23_z > 1 && pos_23_z < 100 && Z_state_Z > 1E-6 && delta_Lz_Z != 0.0) 
    { 

     myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  =  
     myBiopolymerClassContainer.hist_d_23_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_23_z]/delta_Lz_Z;       
      
     };

     if(sqrt(pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 &&
        sqrt(pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 && 
        sqrt(pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0) {
     
       frcVec[0] = (1.0 - 2.0*myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))); 
       frcVec[1] = (1.0 - 2.0*myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));        
       frcVec[2] = (1.0 - 2.0*myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));         
           
     
       bodyForces[body2.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body2.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body2.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body3.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body3.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body3.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);        
       bodyForces[body5.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body5.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body5.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body6.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body6.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body6.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);    
       
     };  
    
  //     std::cout << " 23 " << " " << pos_23_x << " " << pos_23_y << " " << pos_23_z << " "<< frcVec[0] << " " << frcVec[1] << " " << frcVec[2] << "\n";        
    
       diff_vec13 += d_t_13;
       diff_vec12 += d_t_12;
       diff_vec23 += d_t_23;
    
     
   }; 
  };   
}; 

for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) { 
   
  if((myParameterReader.ntc_class_container.getNTC_Class(r)).twobody == 1) {
      
      String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain; 
      
      ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;      
      ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_twobody;
      
      body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"C4*");
      Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,"C4*");
      state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,"C4*");
      
      String chainId2=(myParameterReader.ntc_class_container.getNTC_Class(r)).sec_res_chain_twobody;
      
      body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"C4*");
      Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId2,residueNumber2,"C4*");
      state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId2,residueNumber2,"C4*");
      
      MobilizedBody body4 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,"C4");
      MobilizedBody body5 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId2,residueNumber2,"C4");     
      
   //   Vec3 d12 = state_1%state_2;      
  
      Vec3 d12 = state_2 - state_1;
      
      d_t_12 = d12.norm();
      
      double fraction;
        
      
      d_0_x = -1.0 - 1.0/100.0;
      d_0_y = -1.0 - 1.0/100.0;
      d_0_z = -1.0 - 1.0/100.0;
      
      pos_12b_x = 0;
      pos_12b_y = 0;
      pos_12b_z = 0;
      
      double log_pot = 0.0;
      
      if(Z_state_X == 0.0) Z_state_X = 1.0;
      if(Z_state_Y == 0.0) Z_state_Y = 1.0;
      if(Z_state_Z == 0.0) Z_state_Z = 1.0;
        
  if(Z_state_X != 0.0 && Z_state_Y != 0.0 && Z_state_Z != 0.0) {    
      
      myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1E-2;
      
 //  if((int)myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] >= 100) {    
      
   if(myBiopolymerClassContainer.probability_trans_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] == 1) {         
       
  if(myBiopolymerClassContainer.dL12b_x1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12b_y1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0 &&
     myBiopolymerClassContainer.dL12b_z1[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] != 0.0
     ) {        
       
      for(i=1;i<=100;i++) { 
      
      double delta_Lx = (myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_X - myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_X)/(pow(Z_state_X,2));
      
      double delta_Ly = (myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Y - myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Y)/(pow(Z_state_Y,2));

      double delta_Lz = (myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*Z_state_Z - myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]*sum_grad_Z)/(pow(Z_state_Z,2));      
      
      double W_factor = 1.0; //sqrt(pow(delta_Lx,2)+pow(delta_Ly,2)+pow(delta_Lz,2));
      
      if(sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)) > 0.0) {    
          
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = sqrt(pow(delta_Lx,2)
                     +  pow(delta_Ly,2)
                     +  pow(delta_Lz,2))/
                   sqrt(pow((delta_Lx*(
       myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X - 
       myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2)
       +      pow((delta_Ly*(
       myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2) 
       +      pow((delta_Lz*(
       myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])),2));
      
      } else {
        
       myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;   
          
      };         
           
       delta_x[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Lx*(
       myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_X -  
       myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i])
       + delta_Lx);
       
      // 
     //  exp(-pow(myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0);           
       
      // std::cout << myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << std::endl;

            
 //   if((int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {   

            myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_x[i]*0.001*
            myBiopolymerClassContainer.counter_event_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
            
 //       };
        
           
       delta_y[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Ly*(
       myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Y - 
       myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Ly);
       
        // 
    //   exp(-pow(myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0); 

            
  //   if((int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {  

            myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_y[i]*0.001*
            myBiopolymerClassContainer.counter_event_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
            
  //      };
   
  //    myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 1E-2; 
            
        
       delta_z[i] = W_factor*(-myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]*delta_Lz*(
       myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]/Z_state_Z - 
       myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i]) 
       + delta_Lz);
       
   //      std::cout << myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " DELTA L12 Z \n";
   //      std::cout << Z_state_Z << " " << (myParameterReader.ntc_class_container.getNTC_Class(r)).twobody_bond_k << " " << delta_z[i] << " " << myBiopolymerClassContainer.reg_const[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] << " " << myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << "\n";
       
        // *
    //   exp(-pow(myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i],2)/1000.0); 

       
  //   if((int)(myBiopolymerClassContainer.counter_twobody[(myParameterReader.ntc_class_container.getNTC_Class(r)).count])%100== 0) {  

            myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] -= delta_z[i]*0.001*
            myBiopolymerClassContainer.counter_event_12b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count];
          
        //    std::cout << myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][i] << " HIST 12 Z " << "\n";
            
   //     };
           
        d_0_x += (2.0)/100.0;   
        d_0_y += (2.0)/100.0;           
        d_0_z += (2.0)/100.0;
       
      };
     }; 
    };
    
      d_0_x = 0.0;
      d_0_y = 0.0;
      d_0_z = 0.0;    
 
      pos_12b_x = 0;
      pos_12b_y = 0;
      pos_12b_z = 0;
      
      for(i=1;i<=100;i++) { 
        
         if( sqrt(pow(myBiopolymerClassContainer.dL12b_x1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_x,2)) <= 0.01 ) {
               
              pos_12b_x = i;       
   
         };         
         
         if( sqrt(pow(myBiopolymerClassContainer.dL12b_y1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_y,2)) <= 0.01 ) {
               
              pos_12b_y = i;            
  
         };       
         
         if( sqrt(pow(myBiopolymerClassContainer.dL12b_z1b[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] - d_0_z,2)) <= 0.01 ) {
               
              pos_12b_z = i;
            
         };         
          
        d_0_x += 0.01;   
        d_0_y += 0.01;           
        d_0_z += 0.01;
        
      };
     

  myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0;
  myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count] = 0.0; 
  
      delta_Lx_Z = (myBiopolymerClassContainer.delta_L12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]*myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]*Z_state_X - myBiopolymerClassContainer.dL12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]*sum_grad_X)/(pow(Z_state_X,2));
      
      delta_Ly_Z = (myBiopolymerClassContainer.delta_L12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y]*myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y]*Z_state_Y - myBiopolymerClassContainer.dL12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y]*sum_grad_Y)/(pow(Z_state_Y,2));

      delta_Lz_Z = (myBiopolymerClassContainer.delta_L12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z]*myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z]*Z_state_Z - myBiopolymerClassContainer.dL12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z]*sum_grad_Z)/(pow(Z_state_Z,2));   
    
    if(pos_12b_x > 1 && pos_12b_x < 100 && Z_state_X > 1E-6 && delta_Lx_Z != 0.0) 
    {  
        
     myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_12b_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_x]/delta_Lx_Z;
      
    }
    
    if(pos_12b_y > 1 && pos_12b_y < 100 && Z_state_Y > 1E-6 && delta_Ly_Z != 0.0) 
    {

     myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_12b_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_y]/delta_Ly_Z;
      
    }     
    
    if(pos_12b_z > 1 && pos_12b_z < 100 && Z_state_Z > 1E-6 && delta_Lz_Z != 0.0) 
    { 

     myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]  = 
     myBiopolymerClassContainer.hist_d_12b_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count][pos_12b_z]/delta_Lz_Z;       
      
     };

     if(sqrt(pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 &&
        sqrt(pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0 && 
        sqrt(pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)) < 1.0) {
     
       frcVec[0] = (1.0 - 2.0*myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_x[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2))); 
       frcVec[1] = (1.0 - 2.0*myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_y[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));        
       frcVec[2] = (1.0 - 2.0*myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count]
           *exp(-pow(myBiopolymerClassContainer.bias_z[(myParameterReader.ntc_class_container.getNTC_Class(r)).count],2)));         
      
       bodyForces[body1.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body1.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body1.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body2.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body2.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body2.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body4.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body4.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body4.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       bodyForces[body5.getMobilizedBodyIndex()][1][0] *= (frcVec[0]);
       bodyForces[body5.getMobilizedBodyIndex()][1][1] *= (frcVec[1]);
       bodyForces[body5.getMobilizedBodyIndex()][1][2] *= (frcVec[2]);         
       
     };      
    
 //   std::cout << "12b" << pos_12b_x << " " << pos_12b_y << " "<< pos_12b_z << " "  << frcVec[0]  << " " << frcVec[1] << " " << frcVec[2] << "\n";      
 //   std::cout << "12b" << pos_12b_x << " " << pos_12b_y << " "<< pos_12b_z << " "  << frcVec_B[0]  << " " << frcVec_B[1] << " " << frcVec_B[2] << "\n";
      
   
   diff_vec12 += d_t_12;
   
   };
  };
  
  if(r == (myParameterReader.ntc_class_container.numNTC_Torsions()-1)) std::cout << " D_T_12 : " << diff_vec12 << " D_T_23 : " << diff_vec23 << " D_T_13 : " << diff_vec13 << " DIFF_ANGLE : " << diff_angle_123 << "\n";
  
 }; 
}; 

 

    Real NTC_Torque::calcPotentialEnergy(const State& state) const { 

        double energy = 0.0;  
        double rms    = 0.0;
        MobilizedBody body1;
        MobilizedBody body2;
        MobilizedBody body3;
        MobilizedBody body4;
        Transform transform1;
        Transform transform2;
        double forceConstant;
        double torqueConstant;
        double dutyCycle; //must be between 0 and 1.  at 1, force is applied all the time.  at 0, basically never applied.    
        double scrubberPeriod;
        double cutoffRadius;
        double PI = 5.14159265359;
        double pot_angle;
        double angle;
        double x_d1,x_d2,x_d3,x_d4;
        double y_d1,y_d2,y_d3,y_d4;
        double z_d1,z_d2,z_d3,z_d4;                   
        double d_d1_x,d_d1_y,d_d1_z;
        double d_d2_x,d_d2_y,d_d2_z;
        double d_d3_x,d_d3_y,d_d3_z;
        double cross_1_x,cross_1_y,cross_1_z;
        double cross_2_x,cross_2_y,cross_2_z;
        double d_t,d_t2;
        double cross_3_x,cross_3_y,cross_3_z;
        double direction_x,direction_y,direction_z;
        double rgsq,fg,hg,gaa,gbb,fga,hgb;
        double dfgx,dfgy,dfgz,dthx,dthy,dthz;
        double dtfx,dtfy,dtfz;
        double s_x2,s_y2,s_z2;
        double force_a1_x,force_a1_y,force_a1_z;
        double force_a2_x,force_a2_y,force_a2_z;        
        double force_a3_x,force_a3_y,force_a3_z;
        double force_a4_x,force_a4_y,force_a4_z;
        
        for (int r=0;r<myParameterReader.ntc_class_container.numNTC_Torsions();r++) 
        { 
	    if (myParameterReader.verbose) cout<<__FILE__<<":"<<__LINE__<<"  doing base pair #"<<r<<endl;	
        
            String chainId1=(myParameterReader.ntc_class_container.getNTC_Class(r)).NtC_FirstBPChain;            
            NTC_PAR_BondRow myNTC_PAR_BondRow = myNTC_PAR_Class.myNTC_PAR_BondMatrix.myNTC_PAR_BondRow[(myParameterReader.ntc_class_container.getNTC_Class(r)).NTC_PAR_BondRowIndex];
            String basePairIsTwoTransformForce="ntcstep";
            ResidueID residueNumber1=(myParameterReader.ntc_class_container.getNTC_Class(r)).FirstBPResidue;
            ResidueID residueNumber2=(myParameterReader.ntc_class_container.getNTC_Class(r)).SecondBPResidue;
            ResidueID myResidueNumber,myResidueNumber2;

	    if ( myNTC_PAR_BondRow.bondLength[0] == 0.0 ) {
//		cout << "torsion " << r << " is real torsion" << endl;
            
             Vec3  state_1,state_2,state_3,state_4;
        
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[0]) == 1) myResidueNumber = residueNumber2;
            
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[1]) == 1) myResidueNumber = residueNumber2;
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[2]) == 1) myResidueNumber = residueNumber2;
            
            body3 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            Vec3 stationC = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]);
            state_3 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[2]); 

            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 0) myResidueNumber = residueNumber1;
            if(stoi(myNTC_PAR_BondRow.atom_shift[3]) == 1) myResidueNumber = residueNumber2;

            body4 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            Vec3 stationD = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);
            state_4 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,myResidueNumber,myNTC_PAR_BondRow.residue1Atom[3]);               
            
            torqueConstant = myNTC_PAR_BondRow.torqueConstant;            

            Vec3 d_d1,d_d2,d_d3;
            
            d_d1 = state_2 - state_1;
            d_d2 = state_3 - state_2;
            d_d3 = state_4 - state_3;
            
            Vec3 cross_1, cross_2;
            
            cross_1 = d_d1 % d_d2;
            cross_2 = d_d2 % d_d3;
            
            cross_1 = cross_1 / cross_1.norm();
            cross_2 = cross_2 / cross_2.norm();
        
            Vec3 cross_3;
            
            cross_3 = cross_1 % cross_2;
        
     angle = return_angle(cross_1,cross_2,cross_3,d_d2);
     
     double dist_ang = return_dist_ang(angle,myNTC_PAR_BondRow.rotationAngle);  

    energy += torqueConstant*cos((dist_ang + 180.0)/57.295779513)*(360.0/57.295779513+1.0)/(1.0+myNTC_PAR_BondRow.CONFALVALUE)/(360.0/57.295779513);//torqueConstant*pow(dist_ang/57.295779513,2);//-torqueConstant*(-cos(dist_ang/57.295779513)+(exp(-(pow(dist_ang,2)/(2.0*pow(l_param,2))))));
        
 //   cout << " NTC sampling - CHAIN ID = " << chainId1 << ", residuenumber " << myResidueNumber.ResidueNumber  << " difference-angle = "<< dist_ang << " , CONFALVALUE = " << myNTC_PAR_BondRow.CONFALVALUE << " , " << angle*57.295779513 << " = angle at time t for atoms  = " << myNTC_PAR_BondRow.residue1Atom[0] << " , " << myNTC_PAR_BondRow.residue1Atom[1] << " , " << myNTC_PAR_BondRow.residue1Atom[2] << " , " << myNTC_PAR_BondRow.residue1Atom[3] << " , "<< myNTC_PAR_BondRow.rotationAngle*57.295779513 << " = angle_0 from  input , " << "energy = " << energy << endl;
        
    rms   += sqrt(pow(dist_ang,2));    
            
// end real torsions
	}
// bonds
	else {
	
	    Vec3  state_1;
	    Vec3  state_2;
                    
            body1 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            Vec3 stationA = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]);
            state_1 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber1,myNTC_PAR_BondRow.residue1Atom[0]); 
            
            
            body2 = myBiopolymerClassContainer.updAtomMobilizedBody(matter,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            Vec3 stationB = myBiopolymerClassContainer.getAtomLocationInMobilizedBodyFrame(chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]);
            state_2 = myBiopolymerClassContainer.calcAtomLocationInGroundFrame(state,chainId1,residueNumber2,myNTC_PAR_BondRow.residue1Atom[1]); 
            
            Vec3 diff = state_2 - state_1;
            
            double d = diff.norm();

	  //    cout << "NN|CC difference: " << (d - myNTC_PAR_BondRow.bondLength[0]) << ", current value: " << d << ", equilibrium value: " << myNTC_PAR_BondRow.bondLength[0] << endl;

          energy += myNTC_PAR_BondRow.springConstant[0]*pow(1.0-exp(-(2.0*myNTC_PAR_BondRow.CONFALVALUE)*(d - myNTC_PAR_BondRow.bondLength[0])),2);
          
	     };
       };
       
       cout << rms << " = RMSD Angle sum " << endl;
       
       return energy;   
          

         
    };
    bool NTC_Torque::dependsOnlyOnPositions() const  { 
        return true; 
    };  
    
    
Real NTC_Torque::return_dist_ang(double angle,double rotationAngle) const
{
       
     double ang_diff = (angle - rotationAngle)*57.295779513; // Deg
     double dist_ang = 180.0 - abs(180.0 - abs(ang_diff));
     int angle_1 = int(round(angle*57.295779513));
     int angle_2 = int(round(rotationAngle*57.295779513));

     int interval_begin = angle_2;
     int interval_end   = (interval_begin + 180) % 360;

     if (interval_end > interval_begin) {
         if (angle_1 < interval_begin || angle_1 > interval_end ) {
             dist_ang = -dist_ang;
        }
     } else {
         if (angle_1 < interval_begin && angle_1 > interval_end ) {
             dist_ang = -dist_ang;
        };
    };    
    
  return dist_ang;  
} 

Real NTC_Torque::return_angle(Vec3 cross_1,Vec3 cross_2,Vec3 cross_3,Vec3 d_d2) const 
{
   
   double angle; 
   double PI = 5.14159265359;
           
   Vec3 direction;
            
   direction[0] = cross_3[0]*d_d2[0];
   direction[1] = cross_3[1]*d_d2[1];  
   direction[2] = cross_3[2]*d_d2[2];
            
   double scalar_product = dot(cross_1,cross_2);
        
   if(scalar_product >= 1.0) scalar_product = 1.0;
   if(scalar_product < -1.0) scalar_product = -1.0;       
      
   angle = acos(scalar_product)*180.0/PI;
        
   if(direction[0] < 0.0 && direction[1] < 0.0 && direction[2] < 0.0) {
            
      angle = -angle;
            
   };          
            
   if(angle < 0.0) angle = angle + 360.0;
        
   angle /= 57.295779513;    
    
  return angle;  
}
